# wrapper toolchain, which translates VCPKG_ vars into CMake vars
if(VCPKG_TARGET_ARCHITECTURE STREQUAL "x64")
    set(CMAKE_SYSTEM_PROCESSOR "AMD64")
elseif(VCPKG_TARGET_ARCHITECTURE STREQUAL "arm64")
    set(CMAKE_SYSTEM_PROCESSOR "ARM64")
else()
    message(FATAL_ERROR "Unsupported arch ${VCPKG_TARGET_ARCHITECTURE}")
endif()

if(DEFINED VCPKG_CMAKE_SYSTEM_VERSION)
    set(CMAKE_SYSTEM_VERSION "${VCPKG_CMAKE_SYSTEM_VERSION}" CACHE STRING "" FORCE)
    set(CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION "${VCPKG_CMAKE_SYSTEM_VERSION}")
elseif(NOT DEFINED CMAKE_SYSTEM_VERSION)
    message(FATAL_ERROR "BUG: We should align vcpkg dependencies and our project on Windows SDK version. Include triplet vars in main project")
endif()

list(APPEND CMAKE_TRY_COMPILE_PLATFORM_VARIABLES
        VCPKG_CRT_LINKAGE VCPKG_TARGET_ARCHITECTURE
        VCPKG_C_FLAGS VCPKG_CXX_FLAGS
        VCPKG_C_FLAGS_DEBUG VCPKG_CXX_FLAGS_DEBUG
        VCPKG_C_FLAGS_RELEASE VCPKG_CXX_FLAGS_RELEASE
        VCPKG_LINKER_FLAGS VCPKG_LINKER_FLAGS_RELEASE VCPKG_LINKER_FLAGS_DEBUG
        VCPKG_PLATFORM_TOOLSET CMAKE_SYSTEM_VERSION
)

include("${CMAKE_CURRENT_LIST_DIR}/msvc/Windows.MSVC.toolchain.cmake")
