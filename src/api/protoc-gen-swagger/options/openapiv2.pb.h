// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoc-gen-swagger/options/openapiv2.proto

#ifndef PROTOBUF_INCLUDED_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto
#define PROTOBUF_INCLUDED_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto 

namespace protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto
namespace grpc {
namespace gateway {
namespace protoc_gen_swagger {
namespace options {
class Contact;
class ContactDefaultTypeInternal;
extern ContactDefaultTypeInternal _Contact_default_instance_;
class ExternalDocumentation;
class ExternalDocumentationDefaultTypeInternal;
extern ExternalDocumentationDefaultTypeInternal _ExternalDocumentation_default_instance_;
class Info;
class InfoDefaultTypeInternal;
extern InfoDefaultTypeInternal _Info_default_instance_;
class JSONSchema;
class JSONSchemaDefaultTypeInternal;
extern JSONSchemaDefaultTypeInternal _JSONSchema_default_instance_;
class License;
class LicenseDefaultTypeInternal;
extern LicenseDefaultTypeInternal _License_default_instance_;
class Operation;
class OperationDefaultTypeInternal;
extern OperationDefaultTypeInternal _Operation_default_instance_;
class Operation_ResponsesEntry_DoNotUse;
class Operation_ResponsesEntry_DoNotUseDefaultTypeInternal;
extern Operation_ResponsesEntry_DoNotUseDefaultTypeInternal _Operation_ResponsesEntry_DoNotUse_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class Schema;
class SchemaDefaultTypeInternal;
extern SchemaDefaultTypeInternal _Schema_default_instance_;
class Scopes;
class ScopesDefaultTypeInternal;
extern ScopesDefaultTypeInternal _Scopes_default_instance_;
class Scopes_ScopeEntry_DoNotUse;
class Scopes_ScopeEntry_DoNotUseDefaultTypeInternal;
extern Scopes_ScopeEntry_DoNotUseDefaultTypeInternal _Scopes_ScopeEntry_DoNotUse_default_instance_;
class SecurityDefinitions;
class SecurityDefinitionsDefaultTypeInternal;
extern SecurityDefinitionsDefaultTypeInternal _SecurityDefinitions_default_instance_;
class SecurityDefinitions_SecurityEntry_DoNotUse;
class SecurityDefinitions_SecurityEntry_DoNotUseDefaultTypeInternal;
extern SecurityDefinitions_SecurityEntry_DoNotUseDefaultTypeInternal _SecurityDefinitions_SecurityEntry_DoNotUse_default_instance_;
class SecurityRequirement;
class SecurityRequirementDefaultTypeInternal;
extern SecurityRequirementDefaultTypeInternal _SecurityRequirement_default_instance_;
class SecurityRequirement_SecurityRequirementEntry_DoNotUse;
class SecurityRequirement_SecurityRequirementEntry_DoNotUseDefaultTypeInternal;
extern SecurityRequirement_SecurityRequirementEntry_DoNotUseDefaultTypeInternal _SecurityRequirement_SecurityRequirementEntry_DoNotUse_default_instance_;
class SecurityRequirement_SecurityRequirementValue;
class SecurityRequirement_SecurityRequirementValueDefaultTypeInternal;
extern SecurityRequirement_SecurityRequirementValueDefaultTypeInternal _SecurityRequirement_SecurityRequirementValue_default_instance_;
class SecurityScheme;
class SecuritySchemeDefaultTypeInternal;
extern SecuritySchemeDefaultTypeInternal _SecurityScheme_default_instance_;
class Swagger;
class SwaggerDefaultTypeInternal;
extern SwaggerDefaultTypeInternal _Swagger_default_instance_;
class Swagger_ResponsesEntry_DoNotUse;
class Swagger_ResponsesEntry_DoNotUseDefaultTypeInternal;
extern Swagger_ResponsesEntry_DoNotUseDefaultTypeInternal _Swagger_ResponsesEntry_DoNotUse_default_instance_;
class Tag;
class TagDefaultTypeInternal;
extern TagDefaultTypeInternal _Tag_default_instance_;
}  // namespace options
}  // namespace protoc_gen_swagger
}  // namespace gateway
}  // namespace grpc
namespace google {
namespace protobuf {
template<> ::grpc::gateway::protoc_gen_swagger::options::Contact* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Contact>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Info* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Info>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::JSONSchema* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::JSONSchema>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::License* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::License>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Operation* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Operation>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Operation_ResponsesEntry_DoNotUse* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Operation_ResponsesEntry_DoNotUse>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Response* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Response>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Schema* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Schema>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Scopes* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Scopes>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Scopes_ScopeEntry_DoNotUse* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Scopes_ScopeEntry_DoNotUse>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions_SecurityEntry_DoNotUse* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions_SecurityEntry_DoNotUse>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementValue* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementValue>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::SecurityScheme>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Swagger* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Swagger>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Swagger_ResponsesEntry_DoNotUse* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Swagger_ResponsesEntry_DoNotUse>(Arena*);
template<> ::grpc::gateway::protoc_gen_swagger::options::Tag* Arena::CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Tag>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace grpc {
namespace gateway {
namespace protoc_gen_swagger {
namespace options {

enum Swagger_SwaggerScheme {
  Swagger_SwaggerScheme_UNKNOWN = 0,
  Swagger_SwaggerScheme_HTTP = 1,
  Swagger_SwaggerScheme_HTTPS = 2,
  Swagger_SwaggerScheme_WS = 3,
  Swagger_SwaggerScheme_WSS = 4,
  Swagger_SwaggerScheme_Swagger_SwaggerScheme_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Swagger_SwaggerScheme_Swagger_SwaggerScheme_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Swagger_SwaggerScheme_IsValid(int value);
const Swagger_SwaggerScheme Swagger_SwaggerScheme_SwaggerScheme_MIN = Swagger_SwaggerScheme_UNKNOWN;
const Swagger_SwaggerScheme Swagger_SwaggerScheme_SwaggerScheme_MAX = Swagger_SwaggerScheme_WSS;
const int Swagger_SwaggerScheme_SwaggerScheme_ARRAYSIZE = Swagger_SwaggerScheme_SwaggerScheme_MAX + 1;

const ::google::protobuf::EnumDescriptor* Swagger_SwaggerScheme_descriptor();
inline const ::std::string& Swagger_SwaggerScheme_Name(Swagger_SwaggerScheme value) {
  return ::google::protobuf::internal::NameOfEnum(
    Swagger_SwaggerScheme_descriptor(), value);
}
inline bool Swagger_SwaggerScheme_Parse(
    const ::std::string& name, Swagger_SwaggerScheme* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Swagger_SwaggerScheme>(
    Swagger_SwaggerScheme_descriptor(), name, value);
}
enum JSONSchema_JSONSchemaSimpleTypes {
  JSONSchema_JSONSchemaSimpleTypes_UNKNOWN = 0,
  JSONSchema_JSONSchemaSimpleTypes_ARRAY = 1,
  JSONSchema_JSONSchemaSimpleTypes_BOOLEAN = 2,
  JSONSchema_JSONSchemaSimpleTypes_INTEGER = 3,
  JSONSchema_JSONSchemaSimpleTypes_NULL = 4,
  JSONSchema_JSONSchemaSimpleTypes_NUMBER = 5,
  JSONSchema_JSONSchemaSimpleTypes_OBJECT = 6,
  JSONSchema_JSONSchemaSimpleTypes_STRING = 7,
  JSONSchema_JSONSchemaSimpleTypes_JSONSchema_JSONSchemaSimpleTypes_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JSONSchema_JSONSchemaSimpleTypes_JSONSchema_JSONSchemaSimpleTypes_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JSONSchema_JSONSchemaSimpleTypes_IsValid(int value);
const JSONSchema_JSONSchemaSimpleTypes JSONSchema_JSONSchemaSimpleTypes_JSONSchemaSimpleTypes_MIN = JSONSchema_JSONSchemaSimpleTypes_UNKNOWN;
const JSONSchema_JSONSchemaSimpleTypes JSONSchema_JSONSchemaSimpleTypes_JSONSchemaSimpleTypes_MAX = JSONSchema_JSONSchemaSimpleTypes_STRING;
const int JSONSchema_JSONSchemaSimpleTypes_JSONSchemaSimpleTypes_ARRAYSIZE = JSONSchema_JSONSchemaSimpleTypes_JSONSchemaSimpleTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* JSONSchema_JSONSchemaSimpleTypes_descriptor();
inline const ::std::string& JSONSchema_JSONSchemaSimpleTypes_Name(JSONSchema_JSONSchemaSimpleTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    JSONSchema_JSONSchemaSimpleTypes_descriptor(), value);
}
inline bool JSONSchema_JSONSchemaSimpleTypes_Parse(
    const ::std::string& name, JSONSchema_JSONSchemaSimpleTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JSONSchema_JSONSchemaSimpleTypes>(
    JSONSchema_JSONSchemaSimpleTypes_descriptor(), name, value);
}
enum SecurityScheme_Type {
  SecurityScheme_Type_TYPE_INVALID = 0,
  SecurityScheme_Type_TYPE_BASIC = 1,
  SecurityScheme_Type_TYPE_API_KEY = 2,
  SecurityScheme_Type_TYPE_OAUTH2 = 3,
  SecurityScheme_Type_SecurityScheme_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SecurityScheme_Type_SecurityScheme_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SecurityScheme_Type_IsValid(int value);
const SecurityScheme_Type SecurityScheme_Type_Type_MIN = SecurityScheme_Type_TYPE_INVALID;
const SecurityScheme_Type SecurityScheme_Type_Type_MAX = SecurityScheme_Type_TYPE_OAUTH2;
const int SecurityScheme_Type_Type_ARRAYSIZE = SecurityScheme_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* SecurityScheme_Type_descriptor();
inline const ::std::string& SecurityScheme_Type_Name(SecurityScheme_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    SecurityScheme_Type_descriptor(), value);
}
inline bool SecurityScheme_Type_Parse(
    const ::std::string& name, SecurityScheme_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SecurityScheme_Type>(
    SecurityScheme_Type_descriptor(), name, value);
}
enum SecurityScheme_In {
  SecurityScheme_In_IN_INVALID = 0,
  SecurityScheme_In_IN_QUERY = 1,
  SecurityScheme_In_IN_HEADER = 2,
  SecurityScheme_In_SecurityScheme_In_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SecurityScheme_In_SecurityScheme_In_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SecurityScheme_In_IsValid(int value);
const SecurityScheme_In SecurityScheme_In_In_MIN = SecurityScheme_In_IN_INVALID;
const SecurityScheme_In SecurityScheme_In_In_MAX = SecurityScheme_In_IN_HEADER;
const int SecurityScheme_In_In_ARRAYSIZE = SecurityScheme_In_In_MAX + 1;

const ::google::protobuf::EnumDescriptor* SecurityScheme_In_descriptor();
inline const ::std::string& SecurityScheme_In_Name(SecurityScheme_In value) {
  return ::google::protobuf::internal::NameOfEnum(
    SecurityScheme_In_descriptor(), value);
}
inline bool SecurityScheme_In_Parse(
    const ::std::string& name, SecurityScheme_In* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SecurityScheme_In>(
    SecurityScheme_In_descriptor(), name, value);
}
enum SecurityScheme_Flow {
  SecurityScheme_Flow_FLOW_INVALID = 0,
  SecurityScheme_Flow_FLOW_IMPLICIT = 1,
  SecurityScheme_Flow_FLOW_PASSWORD = 2,
  SecurityScheme_Flow_FLOW_APPLICATION = 3,
  SecurityScheme_Flow_FLOW_ACCESS_CODE = 4,
  SecurityScheme_Flow_SecurityScheme_Flow_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SecurityScheme_Flow_SecurityScheme_Flow_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SecurityScheme_Flow_IsValid(int value);
const SecurityScheme_Flow SecurityScheme_Flow_Flow_MIN = SecurityScheme_Flow_FLOW_INVALID;
const SecurityScheme_Flow SecurityScheme_Flow_Flow_MAX = SecurityScheme_Flow_FLOW_ACCESS_CODE;
const int SecurityScheme_Flow_Flow_ARRAYSIZE = SecurityScheme_Flow_Flow_MAX + 1;

const ::google::protobuf::EnumDescriptor* SecurityScheme_Flow_descriptor();
inline const ::std::string& SecurityScheme_Flow_Name(SecurityScheme_Flow value) {
  return ::google::protobuf::internal::NameOfEnum(
    SecurityScheme_Flow_descriptor(), value);
}
inline bool SecurityScheme_Flow_Parse(
    const ::std::string& name, SecurityScheme_Flow* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SecurityScheme_Flow>(
    SecurityScheme_Flow_descriptor(), name, value);
}
// ===================================================================

class Swagger_ResponsesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Swagger_ResponsesEntry_DoNotUse, 
    ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Swagger_ResponsesEntry_DoNotUse, 
    ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Swagger_ResponsesEntry_DoNotUse();
  Swagger_ResponsesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Swagger_ResponsesEntry_DoNotUse& other);
  static const Swagger_ResponsesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Swagger_ResponsesEntry_DoNotUse*>(&_Swagger_ResponsesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Swagger : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.Swagger) */ {
 public:
  Swagger();
  virtual ~Swagger();

  Swagger(const Swagger& from);

  inline Swagger& operator=(const Swagger& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Swagger(Swagger&& from) noexcept
    : Swagger() {
    *this = ::std::move(from);
  }

  inline Swagger& operator=(Swagger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Swagger& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Swagger* internal_default_instance() {
    return reinterpret_cast<const Swagger*>(
               &_Swagger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Swagger* other);
  friend void swap(Swagger& a, Swagger& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Swagger* New() const final {
    return CreateMaybeMessage<Swagger>(NULL);
  }

  Swagger* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Swagger>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Swagger& from);
  void MergeFrom(const Swagger& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Swagger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  typedef Swagger_SwaggerScheme SwaggerScheme;
  static const SwaggerScheme UNKNOWN =
    Swagger_SwaggerScheme_UNKNOWN;
  static const SwaggerScheme HTTP =
    Swagger_SwaggerScheme_HTTP;
  static const SwaggerScheme HTTPS =
    Swagger_SwaggerScheme_HTTPS;
  static const SwaggerScheme WS =
    Swagger_SwaggerScheme_WS;
  static const SwaggerScheme WSS =
    Swagger_SwaggerScheme_WSS;
  static inline bool SwaggerScheme_IsValid(int value) {
    return Swagger_SwaggerScheme_IsValid(value);
  }
  static const SwaggerScheme SwaggerScheme_MIN =
    Swagger_SwaggerScheme_SwaggerScheme_MIN;
  static const SwaggerScheme SwaggerScheme_MAX =
    Swagger_SwaggerScheme_SwaggerScheme_MAX;
  static const int SwaggerScheme_ARRAYSIZE =
    Swagger_SwaggerScheme_SwaggerScheme_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SwaggerScheme_descriptor() {
    return Swagger_SwaggerScheme_descriptor();
  }
  static inline const ::std::string& SwaggerScheme_Name(SwaggerScheme value) {
    return Swagger_SwaggerScheme_Name(value);
  }
  static inline bool SwaggerScheme_Parse(const ::std::string& name,
      SwaggerScheme* value) {
    return Swagger_SwaggerScheme_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .grpc.gateway.protoc_gen_swagger.options.Swagger.SwaggerScheme schemes = 5;
  int schemes_size() const;
  void clear_schemes();
  static const int kSchemesFieldNumber = 5;
  ::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme schemes(int index) const;
  void set_schemes(int index, ::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme value);
  void add_schemes(::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme value);
  const ::google::protobuf::RepeatedField<int>& schemes() const;
  ::google::protobuf::RepeatedField<int>* mutable_schemes();

  // repeated string consumes = 6;
  int consumes_size() const;
  void clear_consumes();
  static const int kConsumesFieldNumber = 6;
  const ::std::string& consumes(int index) const;
  ::std::string* mutable_consumes(int index);
  void set_consumes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_consumes(int index, ::std::string&& value);
  #endif
  void set_consumes(int index, const char* value);
  void set_consumes(int index, const char* value, size_t size);
  ::std::string* add_consumes();
  void add_consumes(const ::std::string& value);
  #if LANG_CXX11
  void add_consumes(::std::string&& value);
  #endif
  void add_consumes(const char* value);
  void add_consumes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& consumes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_consumes();

  // repeated string produces = 7;
  int produces_size() const;
  void clear_produces();
  static const int kProducesFieldNumber = 7;
  const ::std::string& produces(int index) const;
  ::std::string* mutable_produces(int index);
  void set_produces(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_produces(int index, ::std::string&& value);
  #endif
  void set_produces(int index, const char* value);
  void set_produces(int index, const char* value, size_t size);
  ::std::string* add_produces();
  void add_produces(const ::std::string& value);
  #if LANG_CXX11
  void add_produces(::std::string&& value);
  #endif
  void add_produces(const char* value);
  void add_produces(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& produces() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_produces();

  // map<string, .grpc.gateway.protoc_gen_swagger.options.Response> responses = 10;
  int responses_size() const;
  void clear_responses();
  static const int kResponsesFieldNumber = 10;
  const ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response >&
      responses() const;
  ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response >*
      mutable_responses();

  // repeated .grpc.gateway.protoc_gen_swagger.options.SecurityRequirement security = 12;
  int security_size() const;
  void clear_security();
  static const int kSecurityFieldNumber = 12;
  ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement* mutable_security(int index);
  ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement >*
      mutable_security();
  const ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement& security(int index) const;
  ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement* add_security();
  const ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement >&
      security() const;

  // string swagger = 1;
  void clear_swagger();
  static const int kSwaggerFieldNumber = 1;
  const ::std::string& swagger() const;
  void set_swagger(const ::std::string& value);
  #if LANG_CXX11
  void set_swagger(::std::string&& value);
  #endif
  void set_swagger(const char* value);
  void set_swagger(const char* value, size_t size);
  ::std::string* mutable_swagger();
  ::std::string* release_swagger();
  void set_allocated_swagger(::std::string* swagger);

  // string host = 3;
  void clear_host();
  static const int kHostFieldNumber = 3;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // string base_path = 4;
  void clear_base_path();
  static const int kBasePathFieldNumber = 4;
  const ::std::string& base_path() const;
  void set_base_path(const ::std::string& value);
  #if LANG_CXX11
  void set_base_path(::std::string&& value);
  #endif
  void set_base_path(const char* value);
  void set_base_path(const char* value, size_t size);
  ::std::string* mutable_base_path();
  ::std::string* release_base_path();
  void set_allocated_base_path(::std::string* base_path);

  // .grpc.gateway.protoc_gen_swagger.options.Info info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::Info& _internal_info() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::Info& info() const;
  ::grpc::gateway::protoc_gen_swagger::options::Info* release_info();
  ::grpc::gateway::protoc_gen_swagger::options::Info* mutable_info();
  void set_allocated_info(::grpc::gateway::protoc_gen_swagger::options::Info* info);

  // .grpc.gateway.protoc_gen_swagger.options.SecurityDefinitions security_definitions = 11;
  bool has_security_definitions() const;
  void clear_security_definitions();
  static const int kSecurityDefinitionsFieldNumber = 11;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions& _internal_security_definitions() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions& security_definitions() const;
  ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* release_security_definitions();
  ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* mutable_security_definitions();
  void set_allocated_security_definitions(::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* security_definitions);

  // .grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation external_docs = 14;
  bool has_external_docs() const;
  void clear_external_docs();
  static const int kExternalDocsFieldNumber = 14;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& _internal_external_docs() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& external_docs() const;
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* release_external_docs();
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* mutable_external_docs();
  void set_allocated_external_docs(::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.Swagger)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> schemes_;
  mutable int _schemes_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> consumes_;
  ::google::protobuf::RepeatedPtrField< ::std::string> produces_;
  ::google::protobuf::internal::MapField<
      Swagger_ResponsesEntry_DoNotUse,
      ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > responses_;
  ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement > security_;
  ::google::protobuf::internal::ArenaStringPtr swagger_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr base_path_;
  ::grpc::gateway::protoc_gen_swagger::options::Info* info_;
  ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* security_definitions_;
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Operation_ResponsesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Operation_ResponsesEntry_DoNotUse, 
    ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Operation_ResponsesEntry_DoNotUse, 
    ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Operation_ResponsesEntry_DoNotUse();
  Operation_ResponsesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Operation_ResponsesEntry_DoNotUse& other);
  static const Operation_ResponsesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Operation_ResponsesEntry_DoNotUse*>(&_Operation_ResponsesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Operation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.Operation) */ {
 public:
  Operation();
  virtual ~Operation();

  Operation(const Operation& from);

  inline Operation& operator=(const Operation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Operation(Operation&& from) noexcept
    : Operation() {
    *this = ::std::move(from);
  }

  inline Operation& operator=(Operation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Operation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Operation* internal_default_instance() {
    return reinterpret_cast<const Operation*>(
               &_Operation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Operation* other);
  friend void swap(Operation& a, Operation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Operation* New() const final {
    return CreateMaybeMessage<Operation>(NULL);
  }

  Operation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Operation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Operation& from);
  void MergeFrom(const Operation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Operation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string tags = 1;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 1;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tags();

  // repeated string consumes = 6;
  int consumes_size() const;
  void clear_consumes();
  static const int kConsumesFieldNumber = 6;
  const ::std::string& consumes(int index) const;
  ::std::string* mutable_consumes(int index);
  void set_consumes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_consumes(int index, ::std::string&& value);
  #endif
  void set_consumes(int index, const char* value);
  void set_consumes(int index, const char* value, size_t size);
  ::std::string* add_consumes();
  void add_consumes(const ::std::string& value);
  #if LANG_CXX11
  void add_consumes(::std::string&& value);
  #endif
  void add_consumes(const char* value);
  void add_consumes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& consumes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_consumes();

  // repeated string produces = 7;
  int produces_size() const;
  void clear_produces();
  static const int kProducesFieldNumber = 7;
  const ::std::string& produces(int index) const;
  ::std::string* mutable_produces(int index);
  void set_produces(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_produces(int index, ::std::string&& value);
  #endif
  void set_produces(int index, const char* value);
  void set_produces(int index, const char* value, size_t size);
  ::std::string* add_produces();
  void add_produces(const ::std::string& value);
  #if LANG_CXX11
  void add_produces(::std::string&& value);
  #endif
  void add_produces(const char* value);
  void add_produces(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& produces() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_produces();

  // map<string, .grpc.gateway.protoc_gen_swagger.options.Response> responses = 9;
  int responses_size() const;
  void clear_responses();
  static const int kResponsesFieldNumber = 9;
  const ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response >&
      responses() const;
  ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response >*
      mutable_responses();

  // repeated string schemes = 10;
  int schemes_size() const;
  void clear_schemes();
  static const int kSchemesFieldNumber = 10;
  const ::std::string& schemes(int index) const;
  ::std::string* mutable_schemes(int index);
  void set_schemes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_schemes(int index, ::std::string&& value);
  #endif
  void set_schemes(int index, const char* value);
  void set_schemes(int index, const char* value, size_t size);
  ::std::string* add_schemes();
  void add_schemes(const ::std::string& value);
  #if LANG_CXX11
  void add_schemes(::std::string&& value);
  #endif
  void add_schemes(const char* value);
  void add_schemes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& schemes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_schemes();

  // repeated .grpc.gateway.protoc_gen_swagger.options.SecurityRequirement security = 12;
  int security_size() const;
  void clear_security();
  static const int kSecurityFieldNumber = 12;
  ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement* mutable_security(int index);
  ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement >*
      mutable_security();
  const ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement& security(int index) const;
  ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement* add_security();
  const ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement >&
      security() const;

  // string summary = 2;
  void clear_summary();
  static const int kSummaryFieldNumber = 2;
  const ::std::string& summary() const;
  void set_summary(const ::std::string& value);
  #if LANG_CXX11
  void set_summary(::std::string&& value);
  #endif
  void set_summary(const char* value);
  void set_summary(const char* value, size_t size);
  ::std::string* mutable_summary();
  ::std::string* release_summary();
  void set_allocated_summary(::std::string* summary);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string operation_id = 5;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 5;
  const ::std::string& operation_id() const;
  void set_operation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_operation_id(::std::string&& value);
  #endif
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  ::std::string* mutable_operation_id();
  ::std::string* release_operation_id();
  void set_allocated_operation_id(::std::string* operation_id);

  // .grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation external_docs = 4;
  bool has_external_docs() const;
  void clear_external_docs();
  static const int kExternalDocsFieldNumber = 4;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& _internal_external_docs() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& external_docs() const;
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* release_external_docs();
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* mutable_external_docs();
  void set_allocated_external_docs(::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs);

  // bool deprecated = 11;
  void clear_deprecated();
  static const int kDeprecatedFieldNumber = 11;
  bool deprecated() const;
  void set_deprecated(bool value);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.Operation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tags_;
  ::google::protobuf::RepeatedPtrField< ::std::string> consumes_;
  ::google::protobuf::RepeatedPtrField< ::std::string> produces_;
  ::google::protobuf::internal::MapField<
      Operation_ResponsesEntry_DoNotUse,
      ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > responses_;
  ::google::protobuf::RepeatedPtrField< ::std::string> schemes_;
  ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement > security_;
  ::google::protobuf::internal::ArenaStringPtr summary_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr operation_id_;
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs_;
  bool deprecated_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .grpc.gateway.protoc_gen_swagger.options.Schema schema = 2;
  bool has_schema() const;
  void clear_schema();
  static const int kSchemaFieldNumber = 2;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::Schema& _internal_schema() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::Schema& schema() const;
  ::grpc::gateway::protoc_gen_swagger::options::Schema* release_schema();
  ::grpc::gateway::protoc_gen_swagger::options::Schema* mutable_schema();
  void set_allocated_schema(::grpc::gateway::protoc_gen_swagger::options::Schema* schema);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::grpc::gateway::protoc_gen_swagger::options::Schema* schema_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.Info) */ {
 public:
  Info();
  virtual ~Info();

  Info(const Info& from);

  inline Info& operator=(const Info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Info(Info&& from) noexcept
    : Info() {
    *this = ::std::move(from);
  }

  inline Info& operator=(Info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Info* internal_default_instance() {
    return reinterpret_cast<const Info*>(
               &_Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Info* other);
  friend void swap(Info& a, Info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Info* New() const final {
    return CreateMaybeMessage<Info>(NULL);
  }

  Info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Info& from);
  void MergeFrom(const Info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string terms_of_service = 3;
  void clear_terms_of_service();
  static const int kTermsOfServiceFieldNumber = 3;
  const ::std::string& terms_of_service() const;
  void set_terms_of_service(const ::std::string& value);
  #if LANG_CXX11
  void set_terms_of_service(::std::string&& value);
  #endif
  void set_terms_of_service(const char* value);
  void set_terms_of_service(const char* value, size_t size);
  ::std::string* mutable_terms_of_service();
  ::std::string* release_terms_of_service();
  void set_allocated_terms_of_service(::std::string* terms_of_service);

  // string version = 6;
  void clear_version();
  static const int kVersionFieldNumber = 6;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // .grpc.gateway.protoc_gen_swagger.options.Contact contact = 4;
  bool has_contact() const;
  void clear_contact();
  static const int kContactFieldNumber = 4;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::Contact& _internal_contact() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::Contact& contact() const;
  ::grpc::gateway::protoc_gen_swagger::options::Contact* release_contact();
  ::grpc::gateway::protoc_gen_swagger::options::Contact* mutable_contact();
  void set_allocated_contact(::grpc::gateway::protoc_gen_swagger::options::Contact* contact);

  // .grpc.gateway.protoc_gen_swagger.options.License license = 5;
  bool has_license() const;
  void clear_license();
  static const int kLicenseFieldNumber = 5;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::License& _internal_license() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::License& license() const;
  ::grpc::gateway::protoc_gen_swagger::options::License* release_license();
  ::grpc::gateway::protoc_gen_swagger::options::License* mutable_license();
  void set_allocated_license(::grpc::gateway::protoc_gen_swagger::options::License* license);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.Info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr terms_of_service_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::grpc::gateway::protoc_gen_swagger::options::Contact* contact_;
  ::grpc::gateway::protoc_gen_swagger::options::License* license_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Contact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.Contact) */ {
 public:
  Contact();
  virtual ~Contact();

  Contact(const Contact& from);

  inline Contact& operator=(const Contact& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Contact(Contact&& from) noexcept
    : Contact() {
    *this = ::std::move(from);
  }

  inline Contact& operator=(Contact&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Contact& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Contact* internal_default_instance() {
    return reinterpret_cast<const Contact*>(
               &_Contact_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Contact* other);
  friend void swap(Contact& a, Contact& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Contact* New() const final {
    return CreateMaybeMessage<Contact>(NULL);
  }

  Contact* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Contact>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Contact& from);
  void MergeFrom(const Contact& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Contact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string url = 2;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // string email = 3;
  void clear_email();
  static const int kEmailFieldNumber = 3;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.Contact)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class License : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.License) */ {
 public:
  License();
  virtual ~License();

  License(const License& from);

  inline License& operator=(const License& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  License(License&& from) noexcept
    : License() {
    *this = ::std::move(from);
  }

  inline License& operator=(License&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const License& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const License* internal_default_instance() {
    return reinterpret_cast<const License*>(
               &_License_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(License* other);
  friend void swap(License& a, License& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline License* New() const final {
    return CreateMaybeMessage<License>(NULL);
  }

  License* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<License>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const License& from);
  void MergeFrom(const License& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(License* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string url = 2;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.License)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExternalDocumentation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation) */ {
 public:
  ExternalDocumentation();
  virtual ~ExternalDocumentation();

  ExternalDocumentation(const ExternalDocumentation& from);

  inline ExternalDocumentation& operator=(const ExternalDocumentation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExternalDocumentation(ExternalDocumentation&& from) noexcept
    : ExternalDocumentation() {
    *this = ::std::move(from);
  }

  inline ExternalDocumentation& operator=(ExternalDocumentation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternalDocumentation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExternalDocumentation* internal_default_instance() {
    return reinterpret_cast<const ExternalDocumentation*>(
               &_ExternalDocumentation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ExternalDocumentation* other);
  friend void swap(ExternalDocumentation& a, ExternalDocumentation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExternalDocumentation* New() const final {
    return CreateMaybeMessage<ExternalDocumentation>(NULL);
  }

  ExternalDocumentation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExternalDocumentation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExternalDocumentation& from);
  void MergeFrom(const ExternalDocumentation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExternalDocumentation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string url = 2;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Schema : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.Schema) */ {
 public:
  Schema();
  virtual ~Schema();

  Schema(const Schema& from);

  inline Schema& operator=(const Schema& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Schema(Schema&& from) noexcept
    : Schema() {
    *this = ::std::move(from);
  }

  inline Schema& operator=(Schema&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Schema& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Schema* internal_default_instance() {
    return reinterpret_cast<const Schema*>(
               &_Schema_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Schema* other);
  friend void swap(Schema& a, Schema& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Schema* New() const final {
    return CreateMaybeMessage<Schema>(NULL);
  }

  Schema* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Schema>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Schema& from);
  void MergeFrom(const Schema& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Schema* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string discriminator = 2;
  void clear_discriminator();
  static const int kDiscriminatorFieldNumber = 2;
  const ::std::string& discriminator() const;
  void set_discriminator(const ::std::string& value);
  #if LANG_CXX11
  void set_discriminator(::std::string&& value);
  #endif
  void set_discriminator(const char* value);
  void set_discriminator(const char* value, size_t size);
  ::std::string* mutable_discriminator();
  ::std::string* release_discriminator();
  void set_allocated_discriminator(::std::string* discriminator);

  // .grpc.gateway.protoc_gen_swagger.options.JSONSchema json_schema = 1;
  bool has_json_schema() const;
  void clear_json_schema();
  static const int kJsonSchemaFieldNumber = 1;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::JSONSchema& _internal_json_schema() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::JSONSchema& json_schema() const;
  ::grpc::gateway::protoc_gen_swagger::options::JSONSchema* release_json_schema();
  ::grpc::gateway::protoc_gen_swagger::options::JSONSchema* mutable_json_schema();
  void set_allocated_json_schema(::grpc::gateway::protoc_gen_swagger::options::JSONSchema* json_schema);

  // .grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation external_docs = 5;
  bool has_external_docs() const;
  void clear_external_docs();
  static const int kExternalDocsFieldNumber = 5;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& _internal_external_docs() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& external_docs() const;
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* release_external_docs();
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* mutable_external_docs();
  void set_allocated_external_docs(::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs);

  // .google.protobuf.Any example = 6;
  bool has_example() const;
  void clear_example();
  static const int kExampleFieldNumber = 6;
  private:
  const ::google::protobuf::Any& _internal_example() const;
  public:
  const ::google::protobuf::Any& example() const;
  ::google::protobuf::Any* release_example();
  ::google::protobuf::Any* mutable_example();
  void set_allocated_example(::google::protobuf::Any* example);

  // bool read_only = 3;
  void clear_read_only();
  static const int kReadOnlyFieldNumber = 3;
  bool read_only() const;
  void set_read_only(bool value);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.Schema)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr discriminator_;
  ::grpc::gateway::protoc_gen_swagger::options::JSONSchema* json_schema_;
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs_;
  ::google::protobuf::Any* example_;
  bool read_only_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JSONSchema : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.JSONSchema) */ {
 public:
  JSONSchema();
  virtual ~JSONSchema();

  JSONSchema(const JSONSchema& from);

  inline JSONSchema& operator=(const JSONSchema& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JSONSchema(JSONSchema&& from) noexcept
    : JSONSchema() {
    *this = ::std::move(from);
  }

  inline JSONSchema& operator=(JSONSchema&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JSONSchema& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JSONSchema* internal_default_instance() {
    return reinterpret_cast<const JSONSchema*>(
               &_JSONSchema_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(JSONSchema* other);
  friend void swap(JSONSchema& a, JSONSchema& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JSONSchema* New() const final {
    return CreateMaybeMessage<JSONSchema>(NULL);
  }

  JSONSchema* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JSONSchema>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JSONSchema& from);
  void MergeFrom(const JSONSchema& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JSONSchema* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef JSONSchema_JSONSchemaSimpleTypes JSONSchemaSimpleTypes;
  static const JSONSchemaSimpleTypes UNKNOWN =
    JSONSchema_JSONSchemaSimpleTypes_UNKNOWN;
  static const JSONSchemaSimpleTypes ARRAY =
    JSONSchema_JSONSchemaSimpleTypes_ARRAY;
  static const JSONSchemaSimpleTypes BOOLEAN =
    JSONSchema_JSONSchemaSimpleTypes_BOOLEAN;
  static const JSONSchemaSimpleTypes INTEGER =
    JSONSchema_JSONSchemaSimpleTypes_INTEGER;
  static const JSONSchemaSimpleTypes NULL =
    JSONSchema_JSONSchemaSimpleTypes_NULL;
  static const JSONSchemaSimpleTypes NUMBER =
    JSONSchema_JSONSchemaSimpleTypes_NUMBER;
  static const JSONSchemaSimpleTypes OBJECT =
    JSONSchema_JSONSchemaSimpleTypes_OBJECT;
  static const JSONSchemaSimpleTypes STRING =
    JSONSchema_JSONSchemaSimpleTypes_STRING;
  static inline bool JSONSchemaSimpleTypes_IsValid(int value) {
    return JSONSchema_JSONSchemaSimpleTypes_IsValid(value);
  }
  static const JSONSchemaSimpleTypes JSONSchemaSimpleTypes_MIN =
    JSONSchema_JSONSchemaSimpleTypes_JSONSchemaSimpleTypes_MIN;
  static const JSONSchemaSimpleTypes JSONSchemaSimpleTypes_MAX =
    JSONSchema_JSONSchemaSimpleTypes_JSONSchemaSimpleTypes_MAX;
  static const int JSONSchemaSimpleTypes_ARRAYSIZE =
    JSONSchema_JSONSchemaSimpleTypes_JSONSchemaSimpleTypes_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  JSONSchemaSimpleTypes_descriptor() {
    return JSONSchema_JSONSchemaSimpleTypes_descriptor();
  }
  static inline const ::std::string& JSONSchemaSimpleTypes_Name(JSONSchemaSimpleTypes value) {
    return JSONSchema_JSONSchemaSimpleTypes_Name(value);
  }
  static inline bool JSONSchemaSimpleTypes_Parse(const ::std::string& name,
      JSONSchemaSimpleTypes* value) {
    return JSONSchema_JSONSchemaSimpleTypes_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string required = 26;
  int required_size() const;
  void clear_required();
  static const int kRequiredFieldNumber = 26;
  const ::std::string& required(int index) const;
  ::std::string* mutable_required(int index);
  void set_required(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_required(int index, ::std::string&& value);
  #endif
  void set_required(int index, const char* value);
  void set_required(int index, const char* value, size_t size);
  ::std::string* add_required();
  void add_required(const ::std::string& value);
  #if LANG_CXX11
  void add_required(::std::string&& value);
  #endif
  void add_required(const char* value);
  void add_required(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& required() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_required();

  // repeated string array = 34;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 34;
  const ::std::string& array(int index) const;
  ::std::string* mutable_array(int index);
  void set_array(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_array(int index, ::std::string&& value);
  #endif
  void set_array(int index, const char* value);
  void set_array(int index, const char* value, size_t size);
  ::std::string* add_array();
  void add_array(const ::std::string& value);
  #if LANG_CXX11
  void add_array(::std::string&& value);
  #endif
  void add_array(const char* value);
  void add_array(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& array() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_array();

  // repeated .grpc.gateway.protoc_gen_swagger.options.JSONSchema.JSONSchemaSimpleTypes type = 35;
  int type_size() const;
  void clear_type();
  static const int kTypeFieldNumber = 35;
  ::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes type(int index) const;
  void set_type(int index, ::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes value);
  void add_type(::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes value);
  const ::google::protobuf::RepeatedField<int>& type() const;
  ::google::protobuf::RepeatedField<int>* mutable_type();

  // string ref = 3;
  void clear_ref();
  static const int kRefFieldNumber = 3;
  const ::std::string& ref() const;
  void set_ref(const ::std::string& value);
  #if LANG_CXX11
  void set_ref(::std::string&& value);
  #endif
  void set_ref(const char* value);
  void set_ref(const char* value, size_t size);
  ::std::string* mutable_ref();
  ::std::string* release_ref();
  void set_allocated_ref(::std::string* ref);

  // string title = 5;
  void clear_title();
  static const int kTitleFieldNumber = 5;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string description = 6;
  void clear_description();
  static const int kDescriptionFieldNumber = 6;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string default = 7;
  void clear_default_();
  static const int kDefaultFieldNumber = 7;
  const ::std::string& default_() const;
  void set_default_(const ::std::string& value);
  #if LANG_CXX11
  void set_default_(::std::string&& value);
  #endif
  void set_default_(const char* value);
  void set_default_(const char* value, size_t size);
  ::std::string* mutable_default_();
  ::std::string* release_default_();
  void set_allocated_default_(::std::string* default_);

  // string pattern = 17;
  void clear_pattern();
  static const int kPatternFieldNumber = 17;
  const ::std::string& pattern() const;
  void set_pattern(const ::std::string& value);
  #if LANG_CXX11
  void set_pattern(::std::string&& value);
  #endif
  void set_pattern(const char* value);
  void set_pattern(const char* value, size_t size);
  ::std::string* mutable_pattern();
  ::std::string* release_pattern();
  void set_allocated_pattern(::std::string* pattern);

  // double multiple_of = 10;
  void clear_multiple_of();
  static const int kMultipleOfFieldNumber = 10;
  double multiple_of() const;
  void set_multiple_of(double value);

  // double maximum = 11;
  void clear_maximum();
  static const int kMaximumFieldNumber = 11;
  double maximum() const;
  void set_maximum(double value);

  // double minimum = 13;
  void clear_minimum();
  static const int kMinimumFieldNumber = 13;
  double minimum() const;
  void set_minimum(double value);

  // uint64 max_length = 15;
  void clear_max_length();
  static const int kMaxLengthFieldNumber = 15;
  ::google::protobuf::uint64 max_length() const;
  void set_max_length(::google::protobuf::uint64 value);

  // uint64 min_length = 16;
  void clear_min_length();
  static const int kMinLengthFieldNumber = 16;
  ::google::protobuf::uint64 min_length() const;
  void set_min_length(::google::protobuf::uint64 value);

  // uint64 max_items = 20;
  void clear_max_items();
  static const int kMaxItemsFieldNumber = 20;
  ::google::protobuf::uint64 max_items() const;
  void set_max_items(::google::protobuf::uint64 value);

  // uint64 min_items = 21;
  void clear_min_items();
  static const int kMinItemsFieldNumber = 21;
  ::google::protobuf::uint64 min_items() const;
  void set_min_items(::google::protobuf::uint64 value);

  // bool exclusive_maximum = 12;
  void clear_exclusive_maximum();
  static const int kExclusiveMaximumFieldNumber = 12;
  bool exclusive_maximum() const;
  void set_exclusive_maximum(bool value);

  // bool exclusive_minimum = 14;
  void clear_exclusive_minimum();
  static const int kExclusiveMinimumFieldNumber = 14;
  bool exclusive_minimum() const;
  void set_exclusive_minimum(bool value);

  // bool unique_items = 22;
  void clear_unique_items();
  static const int kUniqueItemsFieldNumber = 22;
  bool unique_items() const;
  void set_unique_items(bool value);

  // uint64 max_properties = 24;
  void clear_max_properties();
  static const int kMaxPropertiesFieldNumber = 24;
  ::google::protobuf::uint64 max_properties() const;
  void set_max_properties(::google::protobuf::uint64 value);

  // uint64 min_properties = 25;
  void clear_min_properties();
  static const int kMinPropertiesFieldNumber = 25;
  ::google::protobuf::uint64 min_properties() const;
  void set_min_properties(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.JSONSchema)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> required_;
  ::google::protobuf::RepeatedPtrField< ::std::string> array_;
  ::google::protobuf::RepeatedField<int> type_;
  mutable int _type_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr ref_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr default__;
  ::google::protobuf::internal::ArenaStringPtr pattern_;
  double multiple_of_;
  double maximum_;
  double minimum_;
  ::google::protobuf::uint64 max_length_;
  ::google::protobuf::uint64 min_length_;
  ::google::protobuf::uint64 max_items_;
  ::google::protobuf::uint64 min_items_;
  bool exclusive_maximum_;
  bool exclusive_minimum_;
  bool unique_items_;
  ::google::protobuf::uint64 max_properties_;
  ::google::protobuf::uint64 min_properties_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.Tag) */ {
 public:
  Tag();
  virtual ~Tag();

  Tag(const Tag& from);

  inline Tag& operator=(const Tag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tag(Tag&& from) noexcept
    : Tag() {
    *this = ::std::move(from);
  }

  inline Tag& operator=(Tag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tag* internal_default_instance() {
    return reinterpret_cast<const Tag*>(
               &_Tag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Tag* other);
  friend void swap(Tag& a, Tag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tag* New() const final {
    return CreateMaybeMessage<Tag>(NULL);
  }

  Tag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Tag& from);
  void MergeFrom(const Tag& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Tag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation external_docs = 3;
  bool has_external_docs() const;
  void clear_external_docs();
  static const int kExternalDocsFieldNumber = 3;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& _internal_external_docs() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& external_docs() const;
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* release_external_docs();
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* mutable_external_docs();
  void set_allocated_external_docs(::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.Tag)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SecurityDefinitions_SecurityEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SecurityDefinitions_SecurityEntry_DoNotUse, 
    ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SecurityDefinitions_SecurityEntry_DoNotUse, 
    ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SecurityDefinitions_SecurityEntry_DoNotUse();
  SecurityDefinitions_SecurityEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SecurityDefinitions_SecurityEntry_DoNotUse& other);
  static const SecurityDefinitions_SecurityEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SecurityDefinitions_SecurityEntry_DoNotUse*>(&_SecurityDefinitions_SecurityEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SecurityDefinitions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.SecurityDefinitions) */ {
 public:
  SecurityDefinitions();
  virtual ~SecurityDefinitions();

  SecurityDefinitions(const SecurityDefinitions& from);

  inline SecurityDefinitions& operator=(const SecurityDefinitions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SecurityDefinitions(SecurityDefinitions&& from) noexcept
    : SecurityDefinitions() {
    *this = ::std::move(from);
  }

  inline SecurityDefinitions& operator=(SecurityDefinitions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SecurityDefinitions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SecurityDefinitions* internal_default_instance() {
    return reinterpret_cast<const SecurityDefinitions*>(
               &_SecurityDefinitions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(SecurityDefinitions* other);
  friend void swap(SecurityDefinitions& a, SecurityDefinitions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SecurityDefinitions* New() const final {
    return CreateMaybeMessage<SecurityDefinitions>(NULL);
  }

  SecurityDefinitions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SecurityDefinitions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SecurityDefinitions& from);
  void MergeFrom(const SecurityDefinitions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SecurityDefinitions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .grpc.gateway.protoc_gen_swagger.options.SecurityScheme> security = 1;
  int security_size() const;
  void clear_security();
  static const int kSecurityFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme >&
      security() const;
  ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme >*
      mutable_security();

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.SecurityDefinitions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SecurityDefinitions_SecurityEntry_DoNotUse,
      ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > security_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SecurityScheme : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.SecurityScheme) */ {
 public:
  SecurityScheme();
  virtual ~SecurityScheme();

  SecurityScheme(const SecurityScheme& from);

  inline SecurityScheme& operator=(const SecurityScheme& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SecurityScheme(SecurityScheme&& from) noexcept
    : SecurityScheme() {
    *this = ::std::move(from);
  }

  inline SecurityScheme& operator=(SecurityScheme&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SecurityScheme& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SecurityScheme* internal_default_instance() {
    return reinterpret_cast<const SecurityScheme*>(
               &_SecurityScheme_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(SecurityScheme* other);
  friend void swap(SecurityScheme& a, SecurityScheme& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SecurityScheme* New() const final {
    return CreateMaybeMessage<SecurityScheme>(NULL);
  }

  SecurityScheme* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SecurityScheme>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SecurityScheme& from);
  void MergeFrom(const SecurityScheme& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SecurityScheme* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SecurityScheme_Type Type;
  static const Type TYPE_INVALID =
    SecurityScheme_Type_TYPE_INVALID;
  static const Type TYPE_BASIC =
    SecurityScheme_Type_TYPE_BASIC;
  static const Type TYPE_API_KEY =
    SecurityScheme_Type_TYPE_API_KEY;
  static const Type TYPE_OAUTH2 =
    SecurityScheme_Type_TYPE_OAUTH2;
  static inline bool Type_IsValid(int value) {
    return SecurityScheme_Type_IsValid(value);
  }
  static const Type Type_MIN =
    SecurityScheme_Type_Type_MIN;
  static const Type Type_MAX =
    SecurityScheme_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    SecurityScheme_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return SecurityScheme_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return SecurityScheme_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return SecurityScheme_Type_Parse(name, value);
  }

  typedef SecurityScheme_In In;
  static const In IN_INVALID =
    SecurityScheme_In_IN_INVALID;
  static const In IN_QUERY =
    SecurityScheme_In_IN_QUERY;
  static const In IN_HEADER =
    SecurityScheme_In_IN_HEADER;
  static inline bool In_IsValid(int value) {
    return SecurityScheme_In_IsValid(value);
  }
  static const In In_MIN =
    SecurityScheme_In_In_MIN;
  static const In In_MAX =
    SecurityScheme_In_In_MAX;
  static const int In_ARRAYSIZE =
    SecurityScheme_In_In_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  In_descriptor() {
    return SecurityScheme_In_descriptor();
  }
  static inline const ::std::string& In_Name(In value) {
    return SecurityScheme_In_Name(value);
  }
  static inline bool In_Parse(const ::std::string& name,
      In* value) {
    return SecurityScheme_In_Parse(name, value);
  }

  typedef SecurityScheme_Flow Flow;
  static const Flow FLOW_INVALID =
    SecurityScheme_Flow_FLOW_INVALID;
  static const Flow FLOW_IMPLICIT =
    SecurityScheme_Flow_FLOW_IMPLICIT;
  static const Flow FLOW_PASSWORD =
    SecurityScheme_Flow_FLOW_PASSWORD;
  static const Flow FLOW_APPLICATION =
    SecurityScheme_Flow_FLOW_APPLICATION;
  static const Flow FLOW_ACCESS_CODE =
    SecurityScheme_Flow_FLOW_ACCESS_CODE;
  static inline bool Flow_IsValid(int value) {
    return SecurityScheme_Flow_IsValid(value);
  }
  static const Flow Flow_MIN =
    SecurityScheme_Flow_Flow_MIN;
  static const Flow Flow_MAX =
    SecurityScheme_Flow_Flow_MAX;
  static const int Flow_ARRAYSIZE =
    SecurityScheme_Flow_Flow_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Flow_descriptor() {
    return SecurityScheme_Flow_descriptor();
  }
  static inline const ::std::string& Flow_Name(Flow value) {
    return SecurityScheme_Flow_Name(value);
  }
  static inline bool Flow_Parse(const ::std::string& name,
      Flow* value) {
    return SecurityScheme_Flow_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string authorization_url = 6;
  void clear_authorization_url();
  static const int kAuthorizationUrlFieldNumber = 6;
  const ::std::string& authorization_url() const;
  void set_authorization_url(const ::std::string& value);
  #if LANG_CXX11
  void set_authorization_url(::std::string&& value);
  #endif
  void set_authorization_url(const char* value);
  void set_authorization_url(const char* value, size_t size);
  ::std::string* mutable_authorization_url();
  ::std::string* release_authorization_url();
  void set_allocated_authorization_url(::std::string* authorization_url);

  // string token_url = 7;
  void clear_token_url();
  static const int kTokenUrlFieldNumber = 7;
  const ::std::string& token_url() const;
  void set_token_url(const ::std::string& value);
  #if LANG_CXX11
  void set_token_url(::std::string&& value);
  #endif
  void set_token_url(const char* value);
  void set_token_url(const char* value, size_t size);
  ::std::string* mutable_token_url();
  ::std::string* release_token_url();
  void set_allocated_token_url(::std::string* token_url);

  // .grpc.gateway.protoc_gen_swagger.options.Scopes scopes = 8;
  bool has_scopes() const;
  void clear_scopes();
  static const int kScopesFieldNumber = 8;
  private:
  const ::grpc::gateway::protoc_gen_swagger::options::Scopes& _internal_scopes() const;
  public:
  const ::grpc::gateway::protoc_gen_swagger::options::Scopes& scopes() const;
  ::grpc::gateway::protoc_gen_swagger::options::Scopes* release_scopes();
  ::grpc::gateway::protoc_gen_swagger::options::Scopes* mutable_scopes();
  void set_allocated_scopes(::grpc::gateway::protoc_gen_swagger::options::Scopes* scopes);

  // .grpc.gateway.protoc_gen_swagger.options.SecurityScheme.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Type type() const;
  void set_type(::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Type value);

  // .grpc.gateway.protoc_gen_swagger.options.SecurityScheme.In in = 4;
  void clear_in();
  static const int kInFieldNumber = 4;
  ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_In in() const;
  void set_in(::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_In value);

  // .grpc.gateway.protoc_gen_swagger.options.SecurityScheme.Flow flow = 5;
  void clear_flow();
  static const int kFlowFieldNumber = 5;
  ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Flow flow() const;
  void set_flow(::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Flow value);

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.SecurityScheme)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr authorization_url_;
  ::google::protobuf::internal::ArenaStringPtr token_url_;
  ::grpc::gateway::protoc_gen_swagger::options::Scopes* scopes_;
  int type_;
  int in_;
  int flow_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SecurityRequirement_SecurityRequirementValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue) */ {
 public:
  SecurityRequirement_SecurityRequirementValue();
  virtual ~SecurityRequirement_SecurityRequirementValue();

  SecurityRequirement_SecurityRequirementValue(const SecurityRequirement_SecurityRequirementValue& from);

  inline SecurityRequirement_SecurityRequirementValue& operator=(const SecurityRequirement_SecurityRequirementValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SecurityRequirement_SecurityRequirementValue(SecurityRequirement_SecurityRequirementValue&& from) noexcept
    : SecurityRequirement_SecurityRequirementValue() {
    *this = ::std::move(from);
  }

  inline SecurityRequirement_SecurityRequirementValue& operator=(SecurityRequirement_SecurityRequirementValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SecurityRequirement_SecurityRequirementValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SecurityRequirement_SecurityRequirementValue* internal_default_instance() {
    return reinterpret_cast<const SecurityRequirement_SecurityRequirementValue*>(
               &_SecurityRequirement_SecurityRequirementValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(SecurityRequirement_SecurityRequirementValue* other);
  friend void swap(SecurityRequirement_SecurityRequirementValue& a, SecurityRequirement_SecurityRequirementValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SecurityRequirement_SecurityRequirementValue* New() const final {
    return CreateMaybeMessage<SecurityRequirement_SecurityRequirementValue>(NULL);
  }

  SecurityRequirement_SecurityRequirementValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SecurityRequirement_SecurityRequirementValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SecurityRequirement_SecurityRequirementValue& from);
  void MergeFrom(const SecurityRequirement_SecurityRequirementValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SecurityRequirement_SecurityRequirementValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string scope = 1;
  int scope_size() const;
  void clear_scope();
  static const int kScopeFieldNumber = 1;
  const ::std::string& scope(int index) const;
  ::std::string* mutable_scope(int index);
  void set_scope(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_scope(int index, ::std::string&& value);
  #endif
  void set_scope(int index, const char* value);
  void set_scope(int index, const char* value, size_t size);
  ::std::string* add_scope();
  void add_scope(const ::std::string& value);
  #if LANG_CXX11
  void add_scope(::std::string&& value);
  #endif
  void add_scope(const char* value);
  void add_scope(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& scope() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_scope();

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> scope_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SecurityRequirement_SecurityRequirementEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SecurityRequirement_SecurityRequirementEntry_DoNotUse, 
    ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SecurityRequirement_SecurityRequirementEntry_DoNotUse, 
    ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SecurityRequirement_SecurityRequirementEntry_DoNotUse();
  SecurityRequirement_SecurityRequirementEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SecurityRequirement_SecurityRequirementEntry_DoNotUse& other);
  static const SecurityRequirement_SecurityRequirementEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SecurityRequirement_SecurityRequirementEntry_DoNotUse*>(&_SecurityRequirement_SecurityRequirementEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SecurityRequirement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement) */ {
 public:
  SecurityRequirement();
  virtual ~SecurityRequirement();

  SecurityRequirement(const SecurityRequirement& from);

  inline SecurityRequirement& operator=(const SecurityRequirement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SecurityRequirement(SecurityRequirement&& from) noexcept
    : SecurityRequirement() {
    *this = ::std::move(from);
  }

  inline SecurityRequirement& operator=(SecurityRequirement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SecurityRequirement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SecurityRequirement* internal_default_instance() {
    return reinterpret_cast<const SecurityRequirement*>(
               &_SecurityRequirement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(SecurityRequirement* other);
  friend void swap(SecurityRequirement& a, SecurityRequirement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SecurityRequirement* New() const final {
    return CreateMaybeMessage<SecurityRequirement>(NULL);
  }

  SecurityRequirement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SecurityRequirement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SecurityRequirement& from);
  void MergeFrom(const SecurityRequirement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SecurityRequirement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SecurityRequirement_SecurityRequirementValue SecurityRequirementValue;

  // accessors -------------------------------------------------------

  // map<string, .grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue> security_requirement = 1;
  int security_requirement_size() const;
  void clear_security_requirement();
  static const int kSecurityRequirementFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementValue >&
      security_requirement() const;
  ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementValue >*
      mutable_security_requirement();

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SecurityRequirement_SecurityRequirementEntry_DoNotUse,
      ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > security_requirement_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Scopes_ScopeEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Scopes_ScopeEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Scopes_ScopeEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Scopes_ScopeEntry_DoNotUse();
  Scopes_ScopeEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Scopes_ScopeEntry_DoNotUse& other);
  static const Scopes_ScopeEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Scopes_ScopeEntry_DoNotUse*>(&_Scopes_ScopeEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Scopes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.gateway.protoc_gen_swagger.options.Scopes) */ {
 public:
  Scopes();
  virtual ~Scopes();

  Scopes(const Scopes& from);

  inline Scopes& operator=(const Scopes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scopes(Scopes&& from) noexcept
    : Scopes() {
    *this = ::std::move(from);
  }

  inline Scopes& operator=(Scopes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scopes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scopes* internal_default_instance() {
    return reinterpret_cast<const Scopes*>(
               &_Scopes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(Scopes* other);
  friend void swap(Scopes& a, Scopes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scopes* New() const final {
    return CreateMaybeMessage<Scopes>(NULL);
  }

  Scopes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Scopes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Scopes& from);
  void MergeFrom(const Scopes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Scopes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> scope = 1;
  int scope_size() const;
  void clear_scope();
  static const int kScopeFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      scope() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_scope();

  // @@protoc_insertion_point(class_scope:grpc.gateway.protoc_gen_swagger.options.Scopes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Scopes_ScopeEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > scope_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Swagger

// string swagger = 1;
inline void Swagger::clear_swagger() {
  swagger_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Swagger::swagger() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.swagger)
  return swagger_.GetNoArena();
}
inline void Swagger::set_swagger(const ::std::string& value) {
  
  swagger_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Swagger.swagger)
}
#if LANG_CXX11
inline void Swagger::set_swagger(::std::string&& value) {
  
  swagger_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Swagger.swagger)
}
#endif
inline void Swagger::set_swagger(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  swagger_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Swagger.swagger)
}
inline void Swagger::set_swagger(const char* value, size_t size) {
  
  swagger_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Swagger.swagger)
}
inline ::std::string* Swagger::mutable_swagger() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.swagger)
  return swagger_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Swagger::release_swagger() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Swagger.swagger)
  
  return swagger_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Swagger::set_allocated_swagger(::std::string* swagger) {
  if (swagger != NULL) {
    
  } else {
    
  }
  swagger_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), swagger);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Swagger.swagger)
}

// .grpc.gateway.protoc_gen_swagger.options.Info info = 2;
inline bool Swagger::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void Swagger::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::Info& Swagger::_internal_info() const {
  return *info_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::Info& Swagger::info() const {
  const ::grpc::gateway::protoc_gen_swagger::options::Info* p = info_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.info)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::Info*>(
      &::grpc::gateway::protoc_gen_swagger::options::_Info_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::Info* Swagger::release_info() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Swagger.info)
  
  ::grpc::gateway::protoc_gen_swagger::options::Info* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::Info* Swagger::mutable_info() {
  
  if (info_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Info>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.info)
  return info_;
}
inline void Swagger::set_allocated_info(::grpc::gateway::protoc_gen_swagger::options::Info* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Swagger.info)
}

// string host = 3;
inline void Swagger::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Swagger::host() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.host)
  return host_.GetNoArena();
}
inline void Swagger::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Swagger.host)
}
#if LANG_CXX11
inline void Swagger::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Swagger.host)
}
#endif
inline void Swagger::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Swagger.host)
}
inline void Swagger::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Swagger.host)
}
inline ::std::string* Swagger::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Swagger::release_host() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Swagger.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Swagger::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Swagger.host)
}

// string base_path = 4;
inline void Swagger::clear_base_path() {
  base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Swagger::base_path() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.base_path)
  return base_path_.GetNoArena();
}
inline void Swagger::set_base_path(const ::std::string& value) {
  
  base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Swagger.base_path)
}
#if LANG_CXX11
inline void Swagger::set_base_path(::std::string&& value) {
  
  base_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Swagger.base_path)
}
#endif
inline void Swagger::set_base_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Swagger.base_path)
}
inline void Swagger::set_base_path(const char* value, size_t size) {
  
  base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Swagger.base_path)
}
inline ::std::string* Swagger::mutable_base_path() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.base_path)
  return base_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Swagger::release_base_path() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Swagger.base_path)
  
  return base_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Swagger::set_allocated_base_path(::std::string* base_path) {
  if (base_path != NULL) {
    
  } else {
    
  }
  base_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_path);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Swagger.base_path)
}

// repeated .grpc.gateway.protoc_gen_swagger.options.Swagger.SwaggerScheme schemes = 5;
inline int Swagger::schemes_size() const {
  return schemes_.size();
}
inline void Swagger::clear_schemes() {
  schemes_.Clear();
}
inline ::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme Swagger::schemes(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.schemes)
  return static_cast< ::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme >(schemes_.Get(index));
}
inline void Swagger::set_schemes(int index, ::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme value) {
  schemes_.Set(index, value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Swagger.schemes)
}
inline void Swagger::add_schemes(::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme value) {
  schemes_.Add(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Swagger.schemes)
}
inline const ::google::protobuf::RepeatedField<int>&
Swagger::schemes() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.Swagger.schemes)
  return schemes_;
}
inline ::google::protobuf::RepeatedField<int>*
Swagger::mutable_schemes() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.Swagger.schemes)
  return &schemes_;
}

// repeated string consumes = 6;
inline int Swagger::consumes_size() const {
  return consumes_.size();
}
inline void Swagger::clear_consumes() {
  consumes_.Clear();
}
inline const ::std::string& Swagger::consumes(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
  return consumes_.Get(index);
}
inline ::std::string* Swagger::mutable_consumes(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
  return consumes_.Mutable(index);
}
inline void Swagger::set_consumes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
  consumes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Swagger::set_consumes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
  consumes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Swagger::set_consumes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  consumes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
}
inline void Swagger::set_consumes(int index, const char* value, size_t size) {
  consumes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
}
inline ::std::string* Swagger::add_consumes() {
  // @@protoc_insertion_point(field_add_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
  return consumes_.Add();
}
inline void Swagger::add_consumes(const ::std::string& value) {
  consumes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
}
#if LANG_CXX11
inline void Swagger::add_consumes(::std::string&& value) {
  consumes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
}
#endif
inline void Swagger::add_consumes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  consumes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
}
inline void Swagger::add_consumes(const char* value, size_t size) {
  consumes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Swagger::consumes() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
  return consumes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Swagger::mutable_consumes() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.Swagger.consumes)
  return &consumes_;
}

// repeated string produces = 7;
inline int Swagger::produces_size() const {
  return produces_.size();
}
inline void Swagger::clear_produces() {
  produces_.Clear();
}
inline const ::std::string& Swagger::produces(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
  return produces_.Get(index);
}
inline ::std::string* Swagger::mutable_produces(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
  return produces_.Mutable(index);
}
inline void Swagger::set_produces(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
  produces_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Swagger::set_produces(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
  produces_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Swagger::set_produces(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  produces_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
}
inline void Swagger::set_produces(int index, const char* value, size_t size) {
  produces_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
}
inline ::std::string* Swagger::add_produces() {
  // @@protoc_insertion_point(field_add_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
  return produces_.Add();
}
inline void Swagger::add_produces(const ::std::string& value) {
  produces_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
}
#if LANG_CXX11
inline void Swagger::add_produces(::std::string&& value) {
  produces_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
}
#endif
inline void Swagger::add_produces(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  produces_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
}
inline void Swagger::add_produces(const char* value, size_t size) {
  produces_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Swagger::produces() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
  return produces_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Swagger::mutable_produces() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.Swagger.produces)
  return &produces_;
}

// map<string, .grpc.gateway.protoc_gen_swagger.options.Response> responses = 10;
inline int Swagger::responses_size() const {
  return responses_.size();
}
inline void Swagger::clear_responses() {
  responses_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response >&
Swagger::responses() const {
  // @@protoc_insertion_point(field_map:grpc.gateway.protoc_gen_swagger.options.Swagger.responses)
  return responses_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response >*
Swagger::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_map:grpc.gateway.protoc_gen_swagger.options.Swagger.responses)
  return responses_.MutableMap();
}

// .grpc.gateway.protoc_gen_swagger.options.SecurityDefinitions security_definitions = 11;
inline bool Swagger::has_security_definitions() const {
  return this != internal_default_instance() && security_definitions_ != NULL;
}
inline void Swagger::clear_security_definitions() {
  if (GetArenaNoVirtual() == NULL && security_definitions_ != NULL) {
    delete security_definitions_;
  }
  security_definitions_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions& Swagger::_internal_security_definitions() const {
  return *security_definitions_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions& Swagger::security_definitions() const {
  const ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* p = security_definitions_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.security_definitions)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions*>(
      &::grpc::gateway::protoc_gen_swagger::options::_SecurityDefinitions_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* Swagger::release_security_definitions() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Swagger.security_definitions)
  
  ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* temp = security_definitions_;
  security_definitions_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* Swagger::mutable_security_definitions() {
  
  if (security_definitions_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions>(GetArenaNoVirtual());
    security_definitions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.security_definitions)
  return security_definitions_;
}
inline void Swagger::set_allocated_security_definitions(::grpc::gateway::protoc_gen_swagger::options::SecurityDefinitions* security_definitions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete security_definitions_;
  }
  if (security_definitions) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      security_definitions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, security_definitions, submessage_arena);
    }
    
  } else {
    
  }
  security_definitions_ = security_definitions;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Swagger.security_definitions)
}

// repeated .grpc.gateway.protoc_gen_swagger.options.SecurityRequirement security = 12;
inline int Swagger::security_size() const {
  return security_.size();
}
inline void Swagger::clear_security() {
  security_.Clear();
}
inline ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement* Swagger::mutable_security(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.security)
  return security_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement >*
Swagger::mutable_security() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.Swagger.security)
  return &security_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement& Swagger::security(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.security)
  return security_.Get(index);
}
inline ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement* Swagger::add_security() {
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Swagger.security)
  return security_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement >&
Swagger::security() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.Swagger.security)
  return security_;
}

// .grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation external_docs = 14;
inline bool Swagger::has_external_docs() const {
  return this != internal_default_instance() && external_docs_ != NULL;
}
inline void Swagger::clear_external_docs() {
  if (GetArenaNoVirtual() == NULL && external_docs_ != NULL) {
    delete external_docs_;
  }
  external_docs_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& Swagger::_internal_external_docs() const {
  return *external_docs_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& Swagger::external_docs() const {
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* p = external_docs_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Swagger.external_docs)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation*>(
      &::grpc::gateway::protoc_gen_swagger::options::_ExternalDocumentation_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* Swagger::release_external_docs() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Swagger.external_docs)
  
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* temp = external_docs_;
  external_docs_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* Swagger::mutable_external_docs() {
  
  if (external_docs_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation>(GetArenaNoVirtual());
    external_docs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Swagger.external_docs)
  return external_docs_;
}
inline void Swagger::set_allocated_external_docs(::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete external_docs_;
  }
  if (external_docs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      external_docs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, external_docs, submessage_arena);
    }
    
  } else {
    
  }
  external_docs_ = external_docs;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Swagger.external_docs)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Operation

// repeated string tags = 1;
inline int Operation::tags_size() const {
  return tags_.size();
}
inline void Operation::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& Operation::tags(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
  return tags_.Get(index);
}
inline ::std::string* Operation::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
  return tags_.Mutable(index);
}
inline void Operation::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Operation::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Operation::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
}
inline void Operation::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
}
inline ::std::string* Operation::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
  return tags_.Add();
}
inline void Operation::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
}
#if LANG_CXX11
inline void Operation::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
}
#endif
inline void Operation::add_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
}
inline void Operation::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Operation::tags() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Operation::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.Operation.tags)
  return &tags_;
}

// string summary = 2;
inline void Operation::clear_summary() {
  summary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Operation::summary() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.summary)
  return summary_.GetNoArena();
}
inline void Operation::set_summary(const ::std::string& value) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.summary)
}
#if LANG_CXX11
inline void Operation::set_summary(::std::string&& value) {
  
  summary_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Operation.summary)
}
#endif
inline void Operation::set_summary(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Operation.summary)
}
inline void Operation::set_summary(const char* value, size_t size) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.summary)
}
inline ::std::string* Operation::mutable_summary() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.summary)
  return summary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Operation::release_summary() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Operation.summary)
  
  return summary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Operation::set_allocated_summary(::std::string* summary) {
  if (summary != NULL) {
    
  } else {
    
  }
  summary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), summary);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Operation.summary)
}

// string description = 3;
inline void Operation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Operation::description() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.description)
  return description_.GetNoArena();
}
inline void Operation::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.description)
}
#if LANG_CXX11
inline void Operation::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Operation.description)
}
#endif
inline void Operation::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Operation.description)
}
inline void Operation::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.description)
}
inline ::std::string* Operation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Operation::release_description() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Operation.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Operation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Operation.description)
}

// .grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation external_docs = 4;
inline bool Operation::has_external_docs() const {
  return this != internal_default_instance() && external_docs_ != NULL;
}
inline void Operation::clear_external_docs() {
  if (GetArenaNoVirtual() == NULL && external_docs_ != NULL) {
    delete external_docs_;
  }
  external_docs_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& Operation::_internal_external_docs() const {
  return *external_docs_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& Operation::external_docs() const {
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* p = external_docs_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.external_docs)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation*>(
      &::grpc::gateway::protoc_gen_swagger::options::_ExternalDocumentation_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* Operation::release_external_docs() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Operation.external_docs)
  
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* temp = external_docs_;
  external_docs_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* Operation::mutable_external_docs() {
  
  if (external_docs_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation>(GetArenaNoVirtual());
    external_docs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.external_docs)
  return external_docs_;
}
inline void Operation::set_allocated_external_docs(::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete external_docs_;
  }
  if (external_docs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      external_docs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, external_docs, submessage_arena);
    }
    
  } else {
    
  }
  external_docs_ = external_docs;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Operation.external_docs)
}

// string operation_id = 5;
inline void Operation::clear_operation_id() {
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Operation::operation_id() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.operation_id)
  return operation_id_.GetNoArena();
}
inline void Operation::set_operation_id(const ::std::string& value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.operation_id)
}
#if LANG_CXX11
inline void Operation::set_operation_id(::std::string&& value) {
  
  operation_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Operation.operation_id)
}
#endif
inline void Operation::set_operation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Operation.operation_id)
}
inline void Operation::set_operation_id(const char* value, size_t size) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.operation_id)
}
inline ::std::string* Operation::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.operation_id)
  return operation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Operation::release_operation_id() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Operation.operation_id)
  
  return operation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Operation::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Operation.operation_id)
}

// repeated string consumes = 6;
inline int Operation::consumes_size() const {
  return consumes_.size();
}
inline void Operation::clear_consumes() {
  consumes_.Clear();
}
inline const ::std::string& Operation::consumes(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
  return consumes_.Get(index);
}
inline ::std::string* Operation::mutable_consumes(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
  return consumes_.Mutable(index);
}
inline void Operation::set_consumes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
  consumes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Operation::set_consumes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
  consumes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Operation::set_consumes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  consumes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
}
inline void Operation::set_consumes(int index, const char* value, size_t size) {
  consumes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
}
inline ::std::string* Operation::add_consumes() {
  // @@protoc_insertion_point(field_add_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
  return consumes_.Add();
}
inline void Operation::add_consumes(const ::std::string& value) {
  consumes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
}
#if LANG_CXX11
inline void Operation::add_consumes(::std::string&& value) {
  consumes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
}
#endif
inline void Operation::add_consumes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  consumes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
}
inline void Operation::add_consumes(const char* value, size_t size) {
  consumes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Operation::consumes() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
  return consumes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Operation::mutable_consumes() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.Operation.consumes)
  return &consumes_;
}

// repeated string produces = 7;
inline int Operation::produces_size() const {
  return produces_.size();
}
inline void Operation::clear_produces() {
  produces_.Clear();
}
inline const ::std::string& Operation::produces(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
  return produces_.Get(index);
}
inline ::std::string* Operation::mutable_produces(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
  return produces_.Mutable(index);
}
inline void Operation::set_produces(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
  produces_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Operation::set_produces(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
  produces_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Operation::set_produces(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  produces_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
}
inline void Operation::set_produces(int index, const char* value, size_t size) {
  produces_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
}
inline ::std::string* Operation::add_produces() {
  // @@protoc_insertion_point(field_add_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
  return produces_.Add();
}
inline void Operation::add_produces(const ::std::string& value) {
  produces_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
}
#if LANG_CXX11
inline void Operation::add_produces(::std::string&& value) {
  produces_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
}
#endif
inline void Operation::add_produces(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  produces_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
}
inline void Operation::add_produces(const char* value, size_t size) {
  produces_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Operation::produces() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
  return produces_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Operation::mutable_produces() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.Operation.produces)
  return &produces_;
}

// map<string, .grpc.gateway.protoc_gen_swagger.options.Response> responses = 9;
inline int Operation::responses_size() const {
  return responses_.size();
}
inline void Operation::clear_responses() {
  responses_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response >&
Operation::responses() const {
  // @@protoc_insertion_point(field_map:grpc.gateway.protoc_gen_swagger.options.Operation.responses)
  return responses_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::Response >*
Operation::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_map:grpc.gateway.protoc_gen_swagger.options.Operation.responses)
  return responses_.MutableMap();
}

// repeated string schemes = 10;
inline int Operation::schemes_size() const {
  return schemes_.size();
}
inline void Operation::clear_schemes() {
  schemes_.Clear();
}
inline const ::std::string& Operation::schemes(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
  return schemes_.Get(index);
}
inline ::std::string* Operation::mutable_schemes(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
  return schemes_.Mutable(index);
}
inline void Operation::set_schemes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
  schemes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Operation::set_schemes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
  schemes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Operation::set_schemes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  schemes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
}
inline void Operation::set_schemes(int index, const char* value, size_t size) {
  schemes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
}
inline ::std::string* Operation::add_schemes() {
  // @@protoc_insertion_point(field_add_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
  return schemes_.Add();
}
inline void Operation::add_schemes(const ::std::string& value) {
  schemes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
}
#if LANG_CXX11
inline void Operation::add_schemes(::std::string&& value) {
  schemes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
}
#endif
inline void Operation::add_schemes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  schemes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
}
inline void Operation::add_schemes(const char* value, size_t size) {
  schemes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Operation::schemes() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
  return schemes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Operation::mutable_schemes() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.Operation.schemes)
  return &schemes_;
}

// bool deprecated = 11;
inline void Operation::clear_deprecated() {
  deprecated_ = false;
}
inline bool Operation::deprecated() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.deprecated)
  return deprecated_;
}
inline void Operation::set_deprecated(bool value) {
  
  deprecated_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Operation.deprecated)
}

// repeated .grpc.gateway.protoc_gen_swagger.options.SecurityRequirement security = 12;
inline int Operation::security_size() const {
  return security_.size();
}
inline void Operation::clear_security() {
  security_.Clear();
}
inline ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement* Operation::mutable_security(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Operation.security)
  return security_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement >*
Operation::mutable_security() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.Operation.security)
  return &security_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement& Operation::security(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Operation.security)
  return security_.Get(index);
}
inline ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement* Operation::add_security() {
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.Operation.security)
  return security_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement >&
Operation::security() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.Operation.security)
  return security_;
}

// -------------------------------------------------------------------

// Response

// string description = 1;
inline void Response::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::description() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Response.description)
  return description_.GetNoArena();
}
inline void Response::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Response.description)
}
#if LANG_CXX11
inline void Response::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Response.description)
}
#endif
inline void Response::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Response.description)
}
inline void Response::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Response.description)
}
inline ::std::string* Response::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Response.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_description() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Response.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Response.description)
}

// .grpc.gateway.protoc_gen_swagger.options.Schema schema = 2;
inline bool Response::has_schema() const {
  return this != internal_default_instance() && schema_ != NULL;
}
inline void Response::clear_schema() {
  if (GetArenaNoVirtual() == NULL && schema_ != NULL) {
    delete schema_;
  }
  schema_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::Schema& Response::_internal_schema() const {
  return *schema_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::Schema& Response::schema() const {
  const ::grpc::gateway::protoc_gen_swagger::options::Schema* p = schema_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Response.schema)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::Schema*>(
      &::grpc::gateway::protoc_gen_swagger::options::_Schema_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::Schema* Response::release_schema() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Response.schema)
  
  ::grpc::gateway::protoc_gen_swagger::options::Schema* temp = schema_;
  schema_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::Schema* Response::mutable_schema() {
  
  if (schema_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Schema>(GetArenaNoVirtual());
    schema_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Response.schema)
  return schema_;
}
inline void Response::set_allocated_schema(::grpc::gateway::protoc_gen_swagger::options::Schema* schema) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete schema_;
  }
  if (schema) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      schema = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, schema, submessage_arena);
    }
    
  } else {
    
  }
  schema_ = schema;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Response.schema)
}

// -------------------------------------------------------------------

// Info

// string title = 1;
inline void Info::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Info::title() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Info.title)
  return title_.GetNoArena();
}
inline void Info::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Info.title)
}
#if LANG_CXX11
inline void Info::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Info.title)
}
#endif
inline void Info::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Info.title)
}
inline void Info::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Info.title)
}
inline ::std::string* Info::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Info.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Info::release_title() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Info.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Info::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Info.title)
}

// string description = 2;
inline void Info::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Info::description() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Info.description)
  return description_.GetNoArena();
}
inline void Info::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Info.description)
}
#if LANG_CXX11
inline void Info::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Info.description)
}
#endif
inline void Info::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Info.description)
}
inline void Info::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Info.description)
}
inline ::std::string* Info::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Info.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Info::release_description() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Info.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Info::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Info.description)
}

// string terms_of_service = 3;
inline void Info::clear_terms_of_service() {
  terms_of_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Info::terms_of_service() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Info.terms_of_service)
  return terms_of_service_.GetNoArena();
}
inline void Info::set_terms_of_service(const ::std::string& value) {
  
  terms_of_service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Info.terms_of_service)
}
#if LANG_CXX11
inline void Info::set_terms_of_service(::std::string&& value) {
  
  terms_of_service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Info.terms_of_service)
}
#endif
inline void Info::set_terms_of_service(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  terms_of_service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Info.terms_of_service)
}
inline void Info::set_terms_of_service(const char* value, size_t size) {
  
  terms_of_service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Info.terms_of_service)
}
inline ::std::string* Info::mutable_terms_of_service() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Info.terms_of_service)
  return terms_of_service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Info::release_terms_of_service() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Info.terms_of_service)
  
  return terms_of_service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Info::set_allocated_terms_of_service(::std::string* terms_of_service) {
  if (terms_of_service != NULL) {
    
  } else {
    
  }
  terms_of_service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), terms_of_service);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Info.terms_of_service)
}

// .grpc.gateway.protoc_gen_swagger.options.Contact contact = 4;
inline bool Info::has_contact() const {
  return this != internal_default_instance() && contact_ != NULL;
}
inline void Info::clear_contact() {
  if (GetArenaNoVirtual() == NULL && contact_ != NULL) {
    delete contact_;
  }
  contact_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::Contact& Info::_internal_contact() const {
  return *contact_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::Contact& Info::contact() const {
  const ::grpc::gateway::protoc_gen_swagger::options::Contact* p = contact_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Info.contact)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::Contact*>(
      &::grpc::gateway::protoc_gen_swagger::options::_Contact_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::Contact* Info::release_contact() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Info.contact)
  
  ::grpc::gateway::protoc_gen_swagger::options::Contact* temp = contact_;
  contact_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::Contact* Info::mutable_contact() {
  
  if (contact_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Contact>(GetArenaNoVirtual());
    contact_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Info.contact)
  return contact_;
}
inline void Info::set_allocated_contact(::grpc::gateway::protoc_gen_swagger::options::Contact* contact) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete contact_;
  }
  if (contact) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contact = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contact, submessage_arena);
    }
    
  } else {
    
  }
  contact_ = contact;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Info.contact)
}

// .grpc.gateway.protoc_gen_swagger.options.License license = 5;
inline bool Info::has_license() const {
  return this != internal_default_instance() && license_ != NULL;
}
inline void Info::clear_license() {
  if (GetArenaNoVirtual() == NULL && license_ != NULL) {
    delete license_;
  }
  license_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::License& Info::_internal_license() const {
  return *license_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::License& Info::license() const {
  const ::grpc::gateway::protoc_gen_swagger::options::License* p = license_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Info.license)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::License*>(
      &::grpc::gateway::protoc_gen_swagger::options::_License_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::License* Info::release_license() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Info.license)
  
  ::grpc::gateway::protoc_gen_swagger::options::License* temp = license_;
  license_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::License* Info::mutable_license() {
  
  if (license_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::License>(GetArenaNoVirtual());
    license_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Info.license)
  return license_;
}
inline void Info::set_allocated_license(::grpc::gateway::protoc_gen_swagger::options::License* license) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete license_;
  }
  if (license) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      license = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, license, submessage_arena);
    }
    
  } else {
    
  }
  license_ = license;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Info.license)
}

// string version = 6;
inline void Info::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Info::version() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Info.version)
  return version_.GetNoArena();
}
inline void Info::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Info.version)
}
#if LANG_CXX11
inline void Info::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Info.version)
}
#endif
inline void Info::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Info.version)
}
inline void Info::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Info.version)
}
inline ::std::string* Info::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Info.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Info::release_version() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Info.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Info::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Info.version)
}

// -------------------------------------------------------------------

// Contact

// string name = 1;
inline void Contact::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Contact::name() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Contact.name)
  return name_.GetNoArena();
}
inline void Contact::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Contact.name)
}
#if LANG_CXX11
inline void Contact::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Contact.name)
}
#endif
inline void Contact::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Contact.name)
}
inline void Contact::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Contact.name)
}
inline ::std::string* Contact::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Contact.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Contact::release_name() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Contact.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contact::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Contact.name)
}

// string url = 2;
inline void Contact::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Contact::url() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Contact.url)
  return url_.GetNoArena();
}
inline void Contact::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Contact.url)
}
#if LANG_CXX11
inline void Contact::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Contact.url)
}
#endif
inline void Contact::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Contact.url)
}
inline void Contact::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Contact.url)
}
inline ::std::string* Contact::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Contact.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Contact::release_url() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Contact.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contact::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Contact.url)
}

// string email = 3;
inline void Contact::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Contact::email() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Contact.email)
  return email_.GetNoArena();
}
inline void Contact::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Contact.email)
}
#if LANG_CXX11
inline void Contact::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Contact.email)
}
#endif
inline void Contact::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Contact.email)
}
inline void Contact::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Contact.email)
}
inline ::std::string* Contact::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Contact.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Contact::release_email() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Contact.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contact::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Contact.email)
}

// -------------------------------------------------------------------

// License

// string name = 1;
inline void License::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& License::name() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.License.name)
  return name_.GetNoArena();
}
inline void License::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.License.name)
}
#if LANG_CXX11
inline void License::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.License.name)
}
#endif
inline void License::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.License.name)
}
inline void License::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.License.name)
}
inline ::std::string* License::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.License.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* License::release_name() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.License.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void License::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.License.name)
}

// string url = 2;
inline void License::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& License::url() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.License.url)
  return url_.GetNoArena();
}
inline void License::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.License.url)
}
#if LANG_CXX11
inline void License::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.License.url)
}
#endif
inline void License::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.License.url)
}
inline void License::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.License.url)
}
inline ::std::string* License::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.License.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* License::release_url() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.License.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void License::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.License.url)
}

// -------------------------------------------------------------------

// ExternalDocumentation

// string description = 1;
inline void ExternalDocumentation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalDocumentation::description() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.description)
  return description_.GetNoArena();
}
inline void ExternalDocumentation::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.description)
}
#if LANG_CXX11
inline void ExternalDocumentation::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.description)
}
#endif
inline void ExternalDocumentation::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.description)
}
inline void ExternalDocumentation::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.description)
}
inline ::std::string* ExternalDocumentation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalDocumentation::release_description() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalDocumentation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.description)
}

// string url = 2;
inline void ExternalDocumentation::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExternalDocumentation::url() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.url)
  return url_.GetNoArena();
}
inline void ExternalDocumentation::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.url)
}
#if LANG_CXX11
inline void ExternalDocumentation::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.url)
}
#endif
inline void ExternalDocumentation::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.url)
}
inline void ExternalDocumentation::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.url)
}
inline ::std::string* ExternalDocumentation::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExternalDocumentation::release_url() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExternalDocumentation::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation.url)
}

// -------------------------------------------------------------------

// Schema

// .grpc.gateway.protoc_gen_swagger.options.JSONSchema json_schema = 1;
inline bool Schema::has_json_schema() const {
  return this != internal_default_instance() && json_schema_ != NULL;
}
inline void Schema::clear_json_schema() {
  if (GetArenaNoVirtual() == NULL && json_schema_ != NULL) {
    delete json_schema_;
  }
  json_schema_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::JSONSchema& Schema::_internal_json_schema() const {
  return *json_schema_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::JSONSchema& Schema::json_schema() const {
  const ::grpc::gateway::protoc_gen_swagger::options::JSONSchema* p = json_schema_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Schema.json_schema)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::JSONSchema*>(
      &::grpc::gateway::protoc_gen_swagger::options::_JSONSchema_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::JSONSchema* Schema::release_json_schema() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Schema.json_schema)
  
  ::grpc::gateway::protoc_gen_swagger::options::JSONSchema* temp = json_schema_;
  json_schema_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::JSONSchema* Schema::mutable_json_schema() {
  
  if (json_schema_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::JSONSchema>(GetArenaNoVirtual());
    json_schema_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Schema.json_schema)
  return json_schema_;
}
inline void Schema::set_allocated_json_schema(::grpc::gateway::protoc_gen_swagger::options::JSONSchema* json_schema) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete json_schema_;
  }
  if (json_schema) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      json_schema = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, json_schema, submessage_arena);
    }
    
  } else {
    
  }
  json_schema_ = json_schema;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Schema.json_schema)
}

// string discriminator = 2;
inline void Schema::clear_discriminator() {
  discriminator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Schema::discriminator() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Schema.discriminator)
  return discriminator_.GetNoArena();
}
inline void Schema::set_discriminator(const ::std::string& value) {
  
  discriminator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Schema.discriminator)
}
#if LANG_CXX11
inline void Schema::set_discriminator(::std::string&& value) {
  
  discriminator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Schema.discriminator)
}
#endif
inline void Schema::set_discriminator(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  discriminator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Schema.discriminator)
}
inline void Schema::set_discriminator(const char* value, size_t size) {
  
  discriminator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Schema.discriminator)
}
inline ::std::string* Schema::mutable_discriminator() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Schema.discriminator)
  return discriminator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Schema::release_discriminator() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Schema.discriminator)
  
  return discriminator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Schema::set_allocated_discriminator(::std::string* discriminator) {
  if (discriminator != NULL) {
    
  } else {
    
  }
  discriminator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), discriminator);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Schema.discriminator)
}

// bool read_only = 3;
inline void Schema::clear_read_only() {
  read_only_ = false;
}
inline bool Schema::read_only() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Schema.read_only)
  return read_only_;
}
inline void Schema::set_read_only(bool value) {
  
  read_only_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Schema.read_only)
}

// .grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation external_docs = 5;
inline bool Schema::has_external_docs() const {
  return this != internal_default_instance() && external_docs_ != NULL;
}
inline void Schema::clear_external_docs() {
  if (GetArenaNoVirtual() == NULL && external_docs_ != NULL) {
    delete external_docs_;
  }
  external_docs_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& Schema::_internal_external_docs() const {
  return *external_docs_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& Schema::external_docs() const {
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* p = external_docs_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Schema.external_docs)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation*>(
      &::grpc::gateway::protoc_gen_swagger::options::_ExternalDocumentation_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* Schema::release_external_docs() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Schema.external_docs)
  
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* temp = external_docs_;
  external_docs_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* Schema::mutable_external_docs() {
  
  if (external_docs_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation>(GetArenaNoVirtual());
    external_docs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Schema.external_docs)
  return external_docs_;
}
inline void Schema::set_allocated_external_docs(::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete external_docs_;
  }
  if (external_docs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      external_docs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, external_docs, submessage_arena);
    }
    
  } else {
    
  }
  external_docs_ = external_docs;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Schema.external_docs)
}

// .google.protobuf.Any example = 6;
inline bool Schema::has_example() const {
  return this != internal_default_instance() && example_ != NULL;
}
inline const ::google::protobuf::Any& Schema::_internal_example() const {
  return *example_;
}
inline const ::google::protobuf::Any& Schema::example() const {
  const ::google::protobuf::Any* p = example_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Schema.example)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Schema::release_example() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Schema.example)
  
  ::google::protobuf::Any* temp = example_;
  example_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* Schema::mutable_example() {
  
  if (example_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    example_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Schema.example)
  return example_;
}
inline void Schema::set_allocated_example(::google::protobuf::Any* example) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(example_);
  }
  if (example) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      example = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, example, submessage_arena);
    }
    
  } else {
    
  }
  example_ = example;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Schema.example)
}

// -------------------------------------------------------------------

// JSONSchema

// string ref = 3;
inline void JSONSchema::clear_ref() {
  ref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JSONSchema::ref() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.ref)
  return ref_.GetNoArena();
}
inline void JSONSchema::set_ref(const ::std::string& value) {
  
  ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.ref)
}
#if LANG_CXX11
inline void JSONSchema::set_ref(::std::string&& value) {
  
  ref_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.JSONSchema.ref)
}
#endif
inline void JSONSchema::set_ref(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.JSONSchema.ref)
}
inline void JSONSchema::set_ref(const char* value, size_t size) {
  
  ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.JSONSchema.ref)
}
inline ::std::string* JSONSchema::mutable_ref() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.JSONSchema.ref)
  return ref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSONSchema::release_ref() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.JSONSchema.ref)
  
  return ref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSONSchema::set_allocated_ref(::std::string* ref) {
  if (ref != NULL) {
    
  } else {
    
  }
  ref_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ref);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.JSONSchema.ref)
}

// string title = 5;
inline void JSONSchema::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JSONSchema::title() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.title)
  return title_.GetNoArena();
}
inline void JSONSchema::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.title)
}
#if LANG_CXX11
inline void JSONSchema::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.JSONSchema.title)
}
#endif
inline void JSONSchema::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.JSONSchema.title)
}
inline void JSONSchema::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.JSONSchema.title)
}
inline ::std::string* JSONSchema::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.JSONSchema.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSONSchema::release_title() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.JSONSchema.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSONSchema::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.JSONSchema.title)
}

// string description = 6;
inline void JSONSchema::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JSONSchema::description() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.description)
  return description_.GetNoArena();
}
inline void JSONSchema::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.description)
}
#if LANG_CXX11
inline void JSONSchema::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.JSONSchema.description)
}
#endif
inline void JSONSchema::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.JSONSchema.description)
}
inline void JSONSchema::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.JSONSchema.description)
}
inline ::std::string* JSONSchema::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.JSONSchema.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSONSchema::release_description() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.JSONSchema.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSONSchema::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.JSONSchema.description)
}

// string default = 7;
inline void JSONSchema::clear_default_() {
  default__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JSONSchema::default_() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.default)
  return default__.GetNoArena();
}
inline void JSONSchema::set_default_(const ::std::string& value) {
  
  default__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.default)
}
#if LANG_CXX11
inline void JSONSchema::set_default_(::std::string&& value) {
  
  default__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.JSONSchema.default)
}
#endif
inline void JSONSchema::set_default_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  default__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.JSONSchema.default)
}
inline void JSONSchema::set_default_(const char* value, size_t size) {
  
  default__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.JSONSchema.default)
}
inline ::std::string* JSONSchema::mutable_default_() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.JSONSchema.default)
  return default__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSONSchema::release_default_() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.JSONSchema.default)
  
  return default__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSONSchema::set_allocated_default_(::std::string* default_) {
  if (default_ != NULL) {
    
  } else {
    
  }
  default__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.JSONSchema.default)
}

// double multiple_of = 10;
inline void JSONSchema::clear_multiple_of() {
  multiple_of_ = 0;
}
inline double JSONSchema::multiple_of() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.multiple_of)
  return multiple_of_;
}
inline void JSONSchema::set_multiple_of(double value) {
  
  multiple_of_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.multiple_of)
}

// double maximum = 11;
inline void JSONSchema::clear_maximum() {
  maximum_ = 0;
}
inline double JSONSchema::maximum() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.maximum)
  return maximum_;
}
inline void JSONSchema::set_maximum(double value) {
  
  maximum_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.maximum)
}

// bool exclusive_maximum = 12;
inline void JSONSchema::clear_exclusive_maximum() {
  exclusive_maximum_ = false;
}
inline bool JSONSchema::exclusive_maximum() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.exclusive_maximum)
  return exclusive_maximum_;
}
inline void JSONSchema::set_exclusive_maximum(bool value) {
  
  exclusive_maximum_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.exclusive_maximum)
}

// double minimum = 13;
inline void JSONSchema::clear_minimum() {
  minimum_ = 0;
}
inline double JSONSchema::minimum() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.minimum)
  return minimum_;
}
inline void JSONSchema::set_minimum(double value) {
  
  minimum_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.minimum)
}

// bool exclusive_minimum = 14;
inline void JSONSchema::clear_exclusive_minimum() {
  exclusive_minimum_ = false;
}
inline bool JSONSchema::exclusive_minimum() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.exclusive_minimum)
  return exclusive_minimum_;
}
inline void JSONSchema::set_exclusive_minimum(bool value) {
  
  exclusive_minimum_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.exclusive_minimum)
}

// uint64 max_length = 15;
inline void JSONSchema::clear_max_length() {
  max_length_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JSONSchema::max_length() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.max_length)
  return max_length_;
}
inline void JSONSchema::set_max_length(::google::protobuf::uint64 value) {
  
  max_length_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.max_length)
}

// uint64 min_length = 16;
inline void JSONSchema::clear_min_length() {
  min_length_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JSONSchema::min_length() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.min_length)
  return min_length_;
}
inline void JSONSchema::set_min_length(::google::protobuf::uint64 value) {
  
  min_length_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.min_length)
}

// string pattern = 17;
inline void JSONSchema::clear_pattern() {
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JSONSchema::pattern() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.pattern)
  return pattern_.GetNoArena();
}
inline void JSONSchema::set_pattern(const ::std::string& value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.pattern)
}
#if LANG_CXX11
inline void JSONSchema::set_pattern(::std::string&& value) {
  
  pattern_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.JSONSchema.pattern)
}
#endif
inline void JSONSchema::set_pattern(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.JSONSchema.pattern)
}
inline void JSONSchema::set_pattern(const char* value, size_t size) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.JSONSchema.pattern)
}
inline ::std::string* JSONSchema::mutable_pattern() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.JSONSchema.pattern)
  return pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSONSchema::release_pattern() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.JSONSchema.pattern)
  
  return pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSONSchema::set_allocated_pattern(::std::string* pattern) {
  if (pattern != NULL) {
    
  } else {
    
  }
  pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pattern);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.JSONSchema.pattern)
}

// uint64 max_items = 20;
inline void JSONSchema::clear_max_items() {
  max_items_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JSONSchema::max_items() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.max_items)
  return max_items_;
}
inline void JSONSchema::set_max_items(::google::protobuf::uint64 value) {
  
  max_items_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.max_items)
}

// uint64 min_items = 21;
inline void JSONSchema::clear_min_items() {
  min_items_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JSONSchema::min_items() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.min_items)
  return min_items_;
}
inline void JSONSchema::set_min_items(::google::protobuf::uint64 value) {
  
  min_items_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.min_items)
}

// bool unique_items = 22;
inline void JSONSchema::clear_unique_items() {
  unique_items_ = false;
}
inline bool JSONSchema::unique_items() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.unique_items)
  return unique_items_;
}
inline void JSONSchema::set_unique_items(bool value) {
  
  unique_items_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.unique_items)
}

// uint64 max_properties = 24;
inline void JSONSchema::clear_max_properties() {
  max_properties_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JSONSchema::max_properties() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.max_properties)
  return max_properties_;
}
inline void JSONSchema::set_max_properties(::google::protobuf::uint64 value) {
  
  max_properties_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.max_properties)
}

// uint64 min_properties = 25;
inline void JSONSchema::clear_min_properties() {
  min_properties_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JSONSchema::min_properties() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.min_properties)
  return min_properties_;
}
inline void JSONSchema::set_min_properties(::google::protobuf::uint64 value) {
  
  min_properties_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.min_properties)
}

// repeated string required = 26;
inline int JSONSchema::required_size() const {
  return required_.size();
}
inline void JSONSchema::clear_required() {
  required_.Clear();
}
inline const ::std::string& JSONSchema::required(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
  return required_.Get(index);
}
inline ::std::string* JSONSchema::mutable_required(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
  return required_.Mutable(index);
}
inline void JSONSchema::set_required(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
  required_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void JSONSchema::set_required(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
  required_.Mutable(index)->assign(std::move(value));
}
#endif
inline void JSONSchema::set_required(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  required_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
}
inline void JSONSchema::set_required(int index, const char* value, size_t size) {
  required_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
}
inline ::std::string* JSONSchema::add_required() {
  // @@protoc_insertion_point(field_add_mutable:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
  return required_.Add();
}
inline void JSONSchema::add_required(const ::std::string& value) {
  required_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
}
#if LANG_CXX11
inline void JSONSchema::add_required(::std::string&& value) {
  required_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
}
#endif
inline void JSONSchema::add_required(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  required_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
}
inline void JSONSchema::add_required(const char* value, size_t size) {
  required_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
JSONSchema::required() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
  return required_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
JSONSchema::mutable_required() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.JSONSchema.required)
  return &required_;
}

// repeated string array = 34;
inline int JSONSchema::array_size() const {
  return array_.size();
}
inline void JSONSchema::clear_array() {
  array_.Clear();
}
inline const ::std::string& JSONSchema::array(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
  return array_.Get(index);
}
inline ::std::string* JSONSchema::mutable_array(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
  return array_.Mutable(index);
}
inline void JSONSchema::set_array(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
  array_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void JSONSchema::set_array(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
  array_.Mutable(index)->assign(std::move(value));
}
#endif
inline void JSONSchema::set_array(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  array_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
}
inline void JSONSchema::set_array(int index, const char* value, size_t size) {
  array_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
}
inline ::std::string* JSONSchema::add_array() {
  // @@protoc_insertion_point(field_add_mutable:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
  return array_.Add();
}
inline void JSONSchema::add_array(const ::std::string& value) {
  array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
}
#if LANG_CXX11
inline void JSONSchema::add_array(::std::string&& value) {
  array_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
}
#endif
inline void JSONSchema::add_array(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
}
inline void JSONSchema::add_array(const char* value, size_t size) {
  array_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
JSONSchema::array() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
  return array_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
JSONSchema::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.JSONSchema.array)
  return &array_;
}

// repeated .grpc.gateway.protoc_gen_swagger.options.JSONSchema.JSONSchemaSimpleTypes type = 35;
inline int JSONSchema::type_size() const {
  return type_.size();
}
inline void JSONSchema::clear_type() {
  type_.Clear();
}
inline ::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes JSONSchema::type(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.JSONSchema.type)
  return static_cast< ::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes >(type_.Get(index));
}
inline void JSONSchema::set_type(int index, ::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes value) {
  type_.Set(index, value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.JSONSchema.type)
}
inline void JSONSchema::add_type(::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes value) {
  type_.Add(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.JSONSchema.type)
}
inline const ::google::protobuf::RepeatedField<int>&
JSONSchema::type() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.JSONSchema.type)
  return type_;
}
inline ::google::protobuf::RepeatedField<int>*
JSONSchema::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.JSONSchema.type)
  return &type_;
}

// -------------------------------------------------------------------

// Tag

// string description = 2;
inline void Tag::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tag::description() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Tag.description)
  return description_.GetNoArena();
}
inline void Tag::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.Tag.description)
}
#if LANG_CXX11
inline void Tag::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.Tag.description)
}
#endif
inline void Tag::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.Tag.description)
}
inline void Tag::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.Tag.description)
}
inline ::std::string* Tag::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Tag.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tag::release_description() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Tag.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tag::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Tag.description)
}

// .grpc.gateway.protoc_gen_swagger.options.ExternalDocumentation external_docs = 3;
inline bool Tag::has_external_docs() const {
  return this != internal_default_instance() && external_docs_ != NULL;
}
inline void Tag::clear_external_docs() {
  if (GetArenaNoVirtual() == NULL && external_docs_ != NULL) {
    delete external_docs_;
  }
  external_docs_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& Tag::_internal_external_docs() const {
  return *external_docs_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation& Tag::external_docs() const {
  const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* p = external_docs_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.Tag.external_docs)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation*>(
      &::grpc::gateway::protoc_gen_swagger::options::_ExternalDocumentation_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* Tag::release_external_docs() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.Tag.external_docs)
  
  ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* temp = external_docs_;
  external_docs_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* Tag::mutable_external_docs() {
  
  if (external_docs_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation>(GetArenaNoVirtual());
    external_docs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.Tag.external_docs)
  return external_docs_;
}
inline void Tag::set_allocated_external_docs(::grpc::gateway::protoc_gen_swagger::options::ExternalDocumentation* external_docs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete external_docs_;
  }
  if (external_docs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      external_docs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, external_docs, submessage_arena);
    }
    
  } else {
    
  }
  external_docs_ = external_docs;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.Tag.external_docs)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SecurityDefinitions

// map<string, .grpc.gateway.protoc_gen_swagger.options.SecurityScheme> security = 1;
inline int SecurityDefinitions::security_size() const {
  return security_.size();
}
inline void SecurityDefinitions::clear_security() {
  security_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme >&
SecurityDefinitions::security() const {
  // @@protoc_insertion_point(field_map:grpc.gateway.protoc_gen_swagger.options.SecurityDefinitions.security)
  return security_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme >*
SecurityDefinitions::mutable_security() {
  // @@protoc_insertion_point(field_mutable_map:grpc.gateway.protoc_gen_swagger.options.SecurityDefinitions.security)
  return security_.MutableMap();
}

// -------------------------------------------------------------------

// SecurityScheme

// .grpc.gateway.protoc_gen_swagger.options.SecurityScheme.Type type = 1;
inline void SecurityScheme::clear_type() {
  type_ = 0;
}
inline ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Type SecurityScheme::type() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.type)
  return static_cast< ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Type >(type_);
}
inline void SecurityScheme::set_type(::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.type)
}

// string description = 2;
inline void SecurityScheme::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SecurityScheme::description() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.description)
  return description_.GetNoArena();
}
inline void SecurityScheme::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.description)
}
#if LANG_CXX11
inline void SecurityScheme::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.description)
}
#endif
inline void SecurityScheme::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.description)
}
inline void SecurityScheme::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.description)
}
inline ::std::string* SecurityScheme::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SecurityScheme::release_description() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SecurityScheme::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.description)
}

// string name = 3;
inline void SecurityScheme::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SecurityScheme::name() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.name)
  return name_.GetNoArena();
}
inline void SecurityScheme::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.name)
}
#if LANG_CXX11
inline void SecurityScheme::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.name)
}
#endif
inline void SecurityScheme::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.name)
}
inline void SecurityScheme::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.name)
}
inline ::std::string* SecurityScheme::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SecurityScheme::release_name() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SecurityScheme::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.name)
}

// .grpc.gateway.protoc_gen_swagger.options.SecurityScheme.In in = 4;
inline void SecurityScheme::clear_in() {
  in_ = 0;
}
inline ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_In SecurityScheme::in() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.in)
  return static_cast< ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_In >(in_);
}
inline void SecurityScheme::set_in(::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_In value) {
  
  in_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.in)
}

// .grpc.gateway.protoc_gen_swagger.options.SecurityScheme.Flow flow = 5;
inline void SecurityScheme::clear_flow() {
  flow_ = 0;
}
inline ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Flow SecurityScheme::flow() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.flow)
  return static_cast< ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Flow >(flow_);
}
inline void SecurityScheme::set_flow(::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Flow value) {
  
  flow_ = value;
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.flow)
}

// string authorization_url = 6;
inline void SecurityScheme::clear_authorization_url() {
  authorization_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SecurityScheme::authorization_url() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.authorization_url)
  return authorization_url_.GetNoArena();
}
inline void SecurityScheme::set_authorization_url(const ::std::string& value) {
  
  authorization_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.authorization_url)
}
#if LANG_CXX11
inline void SecurityScheme::set_authorization_url(::std::string&& value) {
  
  authorization_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.authorization_url)
}
#endif
inline void SecurityScheme::set_authorization_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authorization_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.authorization_url)
}
inline void SecurityScheme::set_authorization_url(const char* value, size_t size) {
  
  authorization_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.authorization_url)
}
inline ::std::string* SecurityScheme::mutable_authorization_url() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.authorization_url)
  return authorization_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SecurityScheme::release_authorization_url() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.authorization_url)
  
  return authorization_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SecurityScheme::set_allocated_authorization_url(::std::string* authorization_url) {
  if (authorization_url != NULL) {
    
  } else {
    
  }
  authorization_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authorization_url);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.authorization_url)
}

// string token_url = 7;
inline void SecurityScheme::clear_token_url() {
  token_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SecurityScheme::token_url() const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.token_url)
  return token_url_.GetNoArena();
}
inline void SecurityScheme::set_token_url(const ::std::string& value) {
  
  token_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.token_url)
}
#if LANG_CXX11
inline void SecurityScheme::set_token_url(::std::string&& value) {
  
  token_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.token_url)
}
#endif
inline void SecurityScheme::set_token_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.token_url)
}
inline void SecurityScheme::set_token_url(const char* value, size_t size) {
  
  token_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.token_url)
}
inline ::std::string* SecurityScheme::mutable_token_url() {
  
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.token_url)
  return token_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SecurityScheme::release_token_url() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.token_url)
  
  return token_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SecurityScheme::set_allocated_token_url(::std::string* token_url) {
  if (token_url != NULL) {
    
  } else {
    
  }
  token_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_url);
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.token_url)
}

// .grpc.gateway.protoc_gen_swagger.options.Scopes scopes = 8;
inline bool SecurityScheme::has_scopes() const {
  return this != internal_default_instance() && scopes_ != NULL;
}
inline void SecurityScheme::clear_scopes() {
  if (GetArenaNoVirtual() == NULL && scopes_ != NULL) {
    delete scopes_;
  }
  scopes_ = NULL;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::Scopes& SecurityScheme::_internal_scopes() const {
  return *scopes_;
}
inline const ::grpc::gateway::protoc_gen_swagger::options::Scopes& SecurityScheme::scopes() const {
  const ::grpc::gateway::protoc_gen_swagger::options::Scopes* p = scopes_;
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.scopes)
  return p != NULL ? *p : *reinterpret_cast<const ::grpc::gateway::protoc_gen_swagger::options::Scopes*>(
      &::grpc::gateway::protoc_gen_swagger::options::_Scopes_default_instance_);
}
inline ::grpc::gateway::protoc_gen_swagger::options::Scopes* SecurityScheme::release_scopes() {
  // @@protoc_insertion_point(field_release:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.scopes)
  
  ::grpc::gateway::protoc_gen_swagger::options::Scopes* temp = scopes_;
  scopes_ = NULL;
  return temp;
}
inline ::grpc::gateway::protoc_gen_swagger::options::Scopes* SecurityScheme::mutable_scopes() {
  
  if (scopes_ == NULL) {
    auto* p = CreateMaybeMessage<::grpc::gateway::protoc_gen_swagger::options::Scopes>(GetArenaNoVirtual());
    scopes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.scopes)
  return scopes_;
}
inline void SecurityScheme::set_allocated_scopes(::grpc::gateway::protoc_gen_swagger::options::Scopes* scopes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete scopes_;
  }
  if (scopes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scopes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scopes, submessage_arena);
    }
    
  } else {
    
  }
  scopes_ = scopes;
  // @@protoc_insertion_point(field_set_allocated:grpc.gateway.protoc_gen_swagger.options.SecurityScheme.scopes)
}

// -------------------------------------------------------------------

// SecurityRequirement_SecurityRequirementValue

// repeated string scope = 1;
inline int SecurityRequirement_SecurityRequirementValue::scope_size() const {
  return scope_.size();
}
inline void SecurityRequirement_SecurityRequirementValue::clear_scope() {
  scope_.Clear();
}
inline const ::std::string& SecurityRequirement_SecurityRequirementValue::scope(int index) const {
  // @@protoc_insertion_point(field_get:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
  return scope_.Get(index);
}
inline ::std::string* SecurityRequirement_SecurityRequirementValue::mutable_scope(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
  return scope_.Mutable(index);
}
inline void SecurityRequirement_SecurityRequirementValue::set_scope(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
  scope_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SecurityRequirement_SecurityRequirementValue::set_scope(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
  scope_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SecurityRequirement_SecurityRequirementValue::set_scope(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  scope_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
}
inline void SecurityRequirement_SecurityRequirementValue::set_scope(int index, const char* value, size_t size) {
  scope_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
}
inline ::std::string* SecurityRequirement_SecurityRequirementValue::add_scope() {
  // @@protoc_insertion_point(field_add_mutable:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
  return scope_.Add();
}
inline void SecurityRequirement_SecurityRequirementValue::add_scope(const ::std::string& value) {
  scope_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
}
#if LANG_CXX11
inline void SecurityRequirement_SecurityRequirementValue::add_scope(::std::string&& value) {
  scope_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
}
#endif
inline void SecurityRequirement_SecurityRequirementValue::add_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  scope_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
}
inline void SecurityRequirement_SecurityRequirementValue::add_scope(const char* value, size_t size) {
  scope_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SecurityRequirement_SecurityRequirementValue::scope() const {
  // @@protoc_insertion_point(field_list:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
  return scope_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SecurityRequirement_SecurityRequirementValue::mutable_scope() {
  // @@protoc_insertion_point(field_mutable_list:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue.scope)
  return &scope_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SecurityRequirement

// map<string, .grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.SecurityRequirementValue> security_requirement = 1;
inline int SecurityRequirement::security_requirement_size() const {
  return security_requirement_.size();
}
inline void SecurityRequirement::clear_security_requirement() {
  security_requirement_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementValue >&
SecurityRequirement::security_requirement() const {
  // @@protoc_insertion_point(field_map:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.security_requirement)
  return security_requirement_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::grpc::gateway::protoc_gen_swagger::options::SecurityRequirement_SecurityRequirementValue >*
SecurityRequirement::mutable_security_requirement() {
  // @@protoc_insertion_point(field_mutable_map:grpc.gateway.protoc_gen_swagger.options.SecurityRequirement.security_requirement)
  return security_requirement_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Scopes

// map<string, string> scope = 1;
inline int Scopes::scope_size() const {
  return scope_.size();
}
inline void Scopes::clear_scope() {
  scope_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Scopes::scope() const {
  // @@protoc_insertion_point(field_map:grpc.gateway.protoc_gen_swagger.options.Scopes.scope)
  return scope_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Scopes::mutable_scope() {
  // @@protoc_insertion_point(field_mutable_map:grpc.gateway.protoc_gen_swagger.options.Scopes.scope)
  return scope_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace options
}  // namespace protoc_gen_swagger
}  // namespace gateway
}  // namespace grpc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme>() {
  return ::grpc::gateway::protoc_gen_swagger::options::Swagger_SwaggerScheme_descriptor();
}
template <> struct is_proto_enum< ::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes>() {
  return ::grpc::gateway::protoc_gen_swagger::options::JSONSchema_JSONSchemaSimpleTypes_descriptor();
}
template <> struct is_proto_enum< ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Type>() {
  return ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Type_descriptor();
}
template <> struct is_proto_enum< ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_In> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_In>() {
  return ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_In_descriptor();
}
template <> struct is_proto_enum< ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Flow> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Flow>() {
  return ::grpc::gateway::protoc_gen_swagger::options::SecurityScheme_Flow_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protoc_2dgen_2dswagger_2foptions_2fopenapiv2_2eproto
