name: run tests
on: [workflow_dispatch]
jobs:
  windows:
    timeout-minutes: 40
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - id: setup-postgres
        uses: ikalnytskyi/action-setup-postgres@v3
        with:
          username: root
          database: nakama
          port: 26257
      - uses: ./.github/actions/run-nakama
        with:
          postgres_uri: "${{ steps.setup-postgres.outputs.connection-uri }}"
      - uses: ./.github/actions/cmake-build
        with:
          preset: win-x64
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - shell: bash
        run: |
          ./test/out/win-x64/nakama-test.exe || {
              echo "Test failed, showing Nakama log for diagnostics";
              cat /tmp/nakama.log;
              exit 1;
          }
  linux:
    timeout-minutes: 30
    runs-on: ubuntu-18.04
    steps:
      - run: gdb --version || { sudo apt update && sudo apt install gdb && gdb --version; }
      - uses: actions/checkout@v3
      - id: setup-postgres
        uses: ikalnytskyi/action-setup-postgres@v3
        with:
          username: root
          database: nakama
          port: 26257
      - uses: ./.github/actions/run-nakama
        with:
          postgres_uri: "${{ steps.setup-postgres.outputs.connection-uri }}"
      - uses: ./.github/actions/cmake-build
        with:
          preset: linux-amd64
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - shell: bash
        run: |
          ./test/out/linux-amd64/nakama-test || {
              echo "Test failed, showing Nakama log for diagnostics";
              cat /tmp/nakama.log;
              exit 1;
          }
#  Below are various diagnostics I used when tests failed, but unluckily only in CI
#  Leaving it here in case we'll need it in the future
#          tail -f /tmp/nakama.log &
#          sleep 60
#          while sudo gdb --batch --ex "attach $(pgrep nakama-test)" --ex 'thread apply all bt'; do
#            curl -u admin:password -v http://localhost:7351/debug/pprof/goroutine?debug=2
#            ss -n -i -t '( dport = 7350 || sport = 7350 )'
#            sleep 10;
#            date
#          done

  apple:
    timeout-minutes: 30
    runs-on: macos-12
    env:
      NAKAMA_TEST_DEVELOPMENT_TEAM: ${{ secrets.NAKAMA_TEST_DEVELOPMENT_TEAM }}
      BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
      P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
      BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
    steps:
      - name: Install the Apple certificate and provisioning profile
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - uses: actions/checkout@v3
      - id: setup-postgres
        uses: ikalnytskyi/action-setup-postgres@v3
        with:
          username: root
          database: nakama
          port: 26257
      - uses: ./.github/actions/run-nakama
        with:
          postgres_uri: "${{ steps.setup-postgres.outputs.connection-uri }}"
      - uses: ./.github/actions/cmake-build
        with:
          preset: macosx-x64-host_x64
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - shell: bash
        run: |
            ./example/out/macosx-x64/nakama-test.app/Contents/MacOS/nakama-test || {
                echo "Test failed, showing Nakama log for diagnostics";
                cat /tmp/nakama.log;
                exit 1;
            }

