name: 'Build platform and upload'
description: 'Build for a single platform and upload the resulting artifact.'
inputs:
  preset:
    description: 'Configure preset name'
    required: true
  nakama-cpp-path:
    description: 'Relative path under $GITHUB_WORKSPACE to the nakama-cpp repository'
    required: true
  build-type:
    description: 'Build config: MinSizeRel or Debug'
    required: true
runs:
  using: "composite"
  steps:
    - id: build
      run: |
        rm -rf out
        cmake --preset ${{ inputs.preset }}
        cmake --build ./build/${{ inputs.preset }} --config ${{ inputs.build-type }} --verbose
        cmake --install ./build/${{ inputs.preset }} --config ${{ inputs.build-type }}
      working-directory: ${{ inputs.nakama-cpp-path }}
      shell: bash

    - name: Get folder name (Linux/MacOS)
      id: get-folder-name-unix
      run: |
        path="./out"
        for dir in "$path"/*/; do
          folder_name=$(basename "$dir")
          echo "folder-name=$folder_name" >> $GITHUB_OUTPUT
        done
      working-directory: ${{ inputs.nakama-cpp-path }}
      shell: bash
      if: runner.os != 'Windows'

    - name: Get folder name (Windows)
      id: get-folder-name-windows
      run: |
        $path = "./out"
        Get-ChildItem -Directory "$path" | ForEach-Object {
            $folder_name = $_.Name
            Write-Output "folder-name=$folder_name" >> $env:GITHUB_OUTPUT
        }
      working-directory: ${{ inputs.nakama-cpp-path }}
      shell: powershell
      if: runner.os == 'Windows'

    - name: Create zip file (Linux/MacOS)
      id: create-zip-unix
      run: |
        folder_name="${{ steps.get-folder-name-unix.outputs.folder-name }}"
        zip -r "./${folder_name}" "./${folder_name}"
        echo "artifact-path=${PWD}/${folder_name}.zip" >> $GITHUB_OUTPUT
      working-directory: ${{ inputs.nakama-cpp-path }}/out
      shell: bash
      if: runner.os != 'Windows'

    - name: Create zip file (Windows)
      id: create-zip-windows
      run: |
        $folder_name = "${{ steps.get-folder-name-windows.outputs.folder-name }}"
        Compress-Archive -Path "./$folder_name" -DestinationPath "./$folder_name.zip"
        $artifact_path = Join-Path $PWD "$folder_name.zip"
        Write-Output "artifact-path=$artifact_path" >> $env:GITHUB_OUTPUT
      working-directory: ${{ inputs.nakama-cpp-path }}/out
      shell: powershell
      if: runner.os == 'Windows'

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.get-folder-name-unix.outputs.folder-name }}
        path: ${{ steps.create-zip-unix.outputs.artifact-path }}
        if-no-files-found: error
      if: runner.os != 'Windows'

    - name: Upload artifact (Windows)
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.get-folder-name-windows.outputs.folder-name }}-${{ inputs.build-type }}
        path: ${{ steps.create-zip-windows.outputs.artifact-path }}
      if: runner.os == 'Windows'
