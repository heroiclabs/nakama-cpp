// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: satori.proto
// Original file comments:
// Copyright 2022 GameUp Online, Inc. d/b/a Heroic Labs
//
// NOTICE: All information contained herein is, and remains the property of Heroic
// Labs. and its suppliers, if any. The intellectual and technical concepts contained
// herein are proprietary to Heroic Labs. and its suppliers and may be covered by U.S.
// and Foreign Patents, patents in process, and are protected by trade secret or
// copyright law. Dissemination of this information or reproduction of this material
// is strictly forbidden unless prior written permission is obtained from Heroic Labs.
//
#ifndef GRPC_satori_2eproto__INCLUDED
#define GRPC_satori_2eproto__INCLUDED

#include "satori.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace satori {
namespace api {

// *
// The GRPC protocol service for Satori built with GRPC.
class Satori final {
 public:
  static constexpr char const* service_full_name() {
    return "satori.api.Satori";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Authenticate against the server.
    virtual ::grpc::Status Authenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::satori::api::Session* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>> AsyncAuthenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>>(AsyncAuthenticateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>> PrepareAsyncAuthenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>>(PrepareAsyncAuthenticateRaw(context, request, cq));
    }
    // Log out a session, invalidate a refresh token, or log out all sessions/refresh tokens for a user.
    virtual ::grpc::Status AuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncAuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncAuthenticateLogoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncAuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncAuthenticateLogoutRaw(context, request, cq));
    }
    // Refresh a user's session using a refresh token retrieved from a previous authentication request.
    virtual ::grpc::Status AuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::satori::api::Session* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>> AsyncAuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>>(AsyncAuthenticateRefreshRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>> PrepareAsyncAuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>>(PrepareAsyncAuthenticateRefreshRaw(context, request, cq));
    }
    // Delete the caller's identity and associated data.
    virtual ::grpc::Status DeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteIdentityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteIdentityRaw(context, request, cq));
    }
    // Publish an event for this session.
    virtual ::grpc::Status Event(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncEvent(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncEvent(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncEventRaw(context, request, cq));
    }
    // Get or list all available experiments for this identity.
    virtual ::grpc::Status GetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::satori::api::ExperimentList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::ExperimentList>> AsyncGetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::ExperimentList>>(AsyncGetExperimentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::ExperimentList>> PrepareAsyncGetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::ExperimentList>>(PrepareAsyncGetExperimentsRaw(context, request, cq));
    }
    // List all available flags for this identity.
    virtual ::grpc::Status GetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::satori::api::FlagList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::FlagList>> AsyncGetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::FlagList>>(AsyncGetFlagsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::FlagList>> PrepareAsyncGetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::FlagList>>(PrepareAsyncGetFlagsRaw(context, request, cq));
    }
    // List available live events.
    virtual ::grpc::Status GetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::satori::api::LiveEventList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::LiveEventList>> AsyncGetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::LiveEventList>>(AsyncGetLiveEventsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::LiveEventList>> PrepareAsyncGetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::LiveEventList>>(PrepareAsyncGetLiveEventsRaw(context, request, cq));
    }
    // A healthcheck which load balancers can use to check the service.
    virtual ::grpc::Status Healthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncHealthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncHealthcheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncHealthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncHealthcheckRaw(context, request, cq));
    }
    // Enrich/replace the current session with new identifier.
    virtual ::grpc::Status Identify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::satori::api::Session* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>> AsyncIdentify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>>(AsyncIdentifyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>> PrepareAsyncIdentify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>>(PrepareAsyncIdentifyRaw(context, request, cq));
    }
    // List properties associated with this identity.
    virtual ::grpc::Status ListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::satori::api::Properties* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Properties>> AsyncListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Properties>>(AsyncListPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Properties>> PrepareAsyncListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Properties>>(PrepareAsyncListPropertiesRaw(context, request, cq));
    }
    // A readycheck which load balancers can use to check the service.
    virtual ::grpc::Status Readycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncReadycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncReadycheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncReadycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncReadycheckRaw(context, request, cq));
    }
    // Update identity properties.
    virtual ::grpc::Status UpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUpdatePropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUpdatePropertiesRaw(context, request, cq));
    }
    // Get the list of messages for the identity.
    virtual ::grpc::Status GetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::satori::api::GetMessageListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::GetMessageListResponse>> AsyncGetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::GetMessageListResponse>>(AsyncGetMessageListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::GetMessageListResponse>> PrepareAsyncGetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::GetMessageListResponse>>(PrepareAsyncGetMessageListRaw(context, request, cq));
    }
    // Updates a message for an identity.
    virtual ::grpc::Status UpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUpdateMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUpdateMessageRaw(context, request, cq));
    }
    // Deletes a message for an identity.
    virtual ::grpc::Status DeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteMessageRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Authenticate against the server.
      virtual void Authenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest* request, ::satori::api::Session* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Authenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest* request, ::satori::api::Session* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Log out a session, invalidate a refresh token, or log out all sessions/refresh tokens for a user.
      virtual void AuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Refresh a user's session using a refresh token retrieved from a previous authentication request.
      virtual void AuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest* request, ::satori::api::Session* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest* request, ::satori::api::Session* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete the caller's identity and associated data.
      virtual void DeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Publish an event for this session.
      virtual void Event(::grpc::ClientContext* context, const ::satori::api::EventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Event(::grpc::ClientContext* context, const ::satori::api::EventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get or list all available experiments for this identity.
      virtual void GetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest* request, ::satori::api::ExperimentList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest* request, ::satori::api::ExperimentList* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List all available flags for this identity.
      virtual void GetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest* request, ::satori::api::FlagList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest* request, ::satori::api::FlagList* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List available live events.
      virtual void GetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest* request, ::satori::api::LiveEventList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest* request, ::satori::api::LiveEventList* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // A healthcheck which load balancers can use to check the service.
      virtual void Healthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Healthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Enrich/replace the current session with new identifier.
      virtual void Identify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest* request, ::satori::api::Session* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Identify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest* request, ::satori::api::Session* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List properties associated with this identity.
      virtual void ListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::satori::api::Properties* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::satori::api::Properties* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // A readycheck which load balancers can use to check the service.
      virtual void Readycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Readycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update identity properties.
      virtual void UpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get the list of messages for the identity.
      virtual void GetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest* request, ::satori::api::GetMessageListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest* request, ::satori::api::GetMessageListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates a message for an identity.
      virtual void UpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a message for an identity.
      virtual void DeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>* AsyncAuthenticateRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>* PrepareAsyncAuthenticateRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncAuthenticateLogoutRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncAuthenticateLogoutRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>* AsyncAuthenticateRefreshRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>* PrepareAsyncAuthenticateRefreshRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteIdentityRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteIdentityRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncEventRaw(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncEventRaw(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::ExperimentList>* AsyncGetExperimentsRaw(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::ExperimentList>* PrepareAsyncGetExperimentsRaw(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::FlagList>* AsyncGetFlagsRaw(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::FlagList>* PrepareAsyncGetFlagsRaw(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::LiveEventList>* AsyncGetLiveEventsRaw(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::LiveEventList>* PrepareAsyncGetLiveEventsRaw(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncHealthcheckRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncHealthcheckRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>* AsyncIdentifyRaw(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Session>* PrepareAsyncIdentifyRaw(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Properties>* AsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::Properties>* PrepareAsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncReadycheckRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncReadycheckRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUpdatePropertiesRaw(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUpdatePropertiesRaw(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::GetMessageListResponse>* AsyncGetMessageListRaw(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::satori::api::GetMessageListResponse>* PrepareAsyncGetMessageListRaw(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUpdateMessageRaw(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUpdateMessageRaw(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteMessageRaw(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteMessageRaw(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Authenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::satori::api::Session* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>> AsyncAuthenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>>(AsyncAuthenticateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>> PrepareAsyncAuthenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>>(PrepareAsyncAuthenticateRaw(context, request, cq));
    }
    ::grpc::Status AuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncAuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncAuthenticateLogoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncAuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncAuthenticateLogoutRaw(context, request, cq));
    }
    ::grpc::Status AuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::satori::api::Session* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>> AsyncAuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>>(AsyncAuthenticateRefreshRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>> PrepareAsyncAuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>>(PrepareAsyncAuthenticateRefreshRaw(context, request, cq));
    }
    ::grpc::Status DeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteIdentityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteIdentityRaw(context, request, cq));
    }
    ::grpc::Status Event(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncEvent(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncEvent(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncEventRaw(context, request, cq));
    }
    ::grpc::Status GetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::satori::api::ExperimentList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::ExperimentList>> AsyncGetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::ExperimentList>>(AsyncGetExperimentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::ExperimentList>> PrepareAsyncGetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::ExperimentList>>(PrepareAsyncGetExperimentsRaw(context, request, cq));
    }
    ::grpc::Status GetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::satori::api::FlagList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::FlagList>> AsyncGetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::FlagList>>(AsyncGetFlagsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::FlagList>> PrepareAsyncGetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::FlagList>>(PrepareAsyncGetFlagsRaw(context, request, cq));
    }
    ::grpc::Status GetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::satori::api::LiveEventList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::LiveEventList>> AsyncGetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::LiveEventList>>(AsyncGetLiveEventsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::LiveEventList>> PrepareAsyncGetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::LiveEventList>>(PrepareAsyncGetLiveEventsRaw(context, request, cq));
    }
    ::grpc::Status Healthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncHealthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncHealthcheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncHealthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncHealthcheckRaw(context, request, cq));
    }
    ::grpc::Status Identify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::satori::api::Session* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>> AsyncIdentify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>>(AsyncIdentifyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>> PrepareAsyncIdentify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Session>>(PrepareAsyncIdentifyRaw(context, request, cq));
    }
    ::grpc::Status ListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::satori::api::Properties* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Properties>> AsyncListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Properties>>(AsyncListPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Properties>> PrepareAsyncListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::Properties>>(PrepareAsyncListPropertiesRaw(context, request, cq));
    }
    ::grpc::Status Readycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncReadycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncReadycheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncReadycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncReadycheckRaw(context, request, cq));
    }
    ::grpc::Status UpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUpdatePropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUpdatePropertiesRaw(context, request, cq));
    }
    ::grpc::Status GetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::satori::api::GetMessageListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::GetMessageListResponse>> AsyncGetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::GetMessageListResponse>>(AsyncGetMessageListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::GetMessageListResponse>> PrepareAsyncGetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::satori::api::GetMessageListResponse>>(PrepareAsyncGetMessageListRaw(context, request, cq));
    }
    ::grpc::Status UpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUpdateMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUpdateMessageRaw(context, request, cq));
    }
    ::grpc::Status DeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteMessageRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Authenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest* request, ::satori::api::Session* response, std::function<void(::grpc::Status)>) override;
      void Authenticate(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest* request, ::satori::api::Session* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void AuthenticateLogout(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest* request, ::satori::api::Session* response, std::function<void(::grpc::Status)>) override;
      void AuthenticateRefresh(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest* request, ::satori::api::Session* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteIdentity(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Event(::grpc::ClientContext* context, const ::satori::api::EventRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Event(::grpc::ClientContext* context, const ::satori::api::EventRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest* request, ::satori::api::ExperimentList* response, std::function<void(::grpc::Status)>) override;
      void GetExperiments(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest* request, ::satori::api::ExperimentList* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest* request, ::satori::api::FlagList* response, std::function<void(::grpc::Status)>) override;
      void GetFlags(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest* request, ::satori::api::FlagList* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest* request, ::satori::api::LiveEventList* response, std::function<void(::grpc::Status)>) override;
      void GetLiveEvents(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest* request, ::satori::api::LiveEventList* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Healthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Healthcheck(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Identify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest* request, ::satori::api::Session* response, std::function<void(::grpc::Status)>) override;
      void Identify(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest* request, ::satori::api::Session* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::satori::api::Properties* response, std::function<void(::grpc::Status)>) override;
      void ListProperties(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::satori::api::Properties* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Readycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Readycheck(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void UpdateProperties(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest* request, ::satori::api::GetMessageListResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMessageList(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest* request, ::satori::api::GetMessageListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void UpdateMessage(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteMessage(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::satori::api::Session>* AsyncAuthenticateRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::Session>* PrepareAsyncAuthenticateRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncAuthenticateLogoutRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncAuthenticateLogoutRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateLogoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::Session>* AsyncAuthenticateRefreshRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::Session>* PrepareAsyncAuthenticateRefreshRaw(::grpc::ClientContext* context, const ::satori::api::AuthenticateRefreshRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteIdentityRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteIdentityRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncEventRaw(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncEventRaw(::grpc::ClientContext* context, const ::satori::api::EventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::ExperimentList>* AsyncGetExperimentsRaw(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::ExperimentList>* PrepareAsyncGetExperimentsRaw(::grpc::ClientContext* context, const ::satori::api::GetExperimentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::FlagList>* AsyncGetFlagsRaw(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::FlagList>* PrepareAsyncGetFlagsRaw(::grpc::ClientContext* context, const ::satori::api::GetFlagsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::LiveEventList>* AsyncGetLiveEventsRaw(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::LiveEventList>* PrepareAsyncGetLiveEventsRaw(::grpc::ClientContext* context, const ::satori::api::GetLiveEventsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncHealthcheckRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncHealthcheckRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::Session>* AsyncIdentifyRaw(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::Session>* PrepareAsyncIdentifyRaw(::grpc::ClientContext* context, const ::satori::api::IdentifyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::Properties>* AsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::Properties>* PrepareAsyncListPropertiesRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncReadycheckRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncReadycheckRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUpdatePropertiesRaw(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUpdatePropertiesRaw(::grpc::ClientContext* context, const ::satori::api::UpdatePropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::GetMessageListResponse>* AsyncGetMessageListRaw(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::satori::api::GetMessageListResponse>* PrepareAsyncGetMessageListRaw(::grpc::ClientContext* context, const ::satori::api::GetMessageListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUpdateMessageRaw(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUpdateMessageRaw(::grpc::ClientContext* context, const ::satori::api::UpdateMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteMessageRaw(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteMessageRaw(::grpc::ClientContext* context, const ::satori::api::DeleteMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Authenticate_;
    const ::grpc::internal::RpcMethod rpcmethod_AuthenticateLogout_;
    const ::grpc::internal::RpcMethod rpcmethod_AuthenticateRefresh_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteIdentity_;
    const ::grpc::internal::RpcMethod rpcmethod_Event_;
    const ::grpc::internal::RpcMethod rpcmethod_GetExperiments_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFlags_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLiveEvents_;
    const ::grpc::internal::RpcMethod rpcmethod_Healthcheck_;
    const ::grpc::internal::RpcMethod rpcmethod_Identify_;
    const ::grpc::internal::RpcMethod rpcmethod_ListProperties_;
    const ::grpc::internal::RpcMethod rpcmethod_Readycheck_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateProperties_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMessageList_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateMessage_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteMessage_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Authenticate against the server.
    virtual ::grpc::Status Authenticate(::grpc::ServerContext* context, const ::satori::api::AuthenticateRequest* request, ::satori::api::Session* response);
    // Log out a session, invalidate a refresh token, or log out all sessions/refresh tokens for a user.
    virtual ::grpc::Status AuthenticateLogout(::grpc::ServerContext* context, const ::satori::api::AuthenticateLogoutRequest* request, ::google::protobuf::Empty* response);
    // Refresh a user's session using a refresh token retrieved from a previous authentication request.
    virtual ::grpc::Status AuthenticateRefresh(::grpc::ServerContext* context, const ::satori::api::AuthenticateRefreshRequest* request, ::satori::api::Session* response);
    // Delete the caller's identity and associated data.
    virtual ::grpc::Status DeleteIdentity(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // Publish an event for this session.
    virtual ::grpc::Status Event(::grpc::ServerContext* context, const ::satori::api::EventRequest* request, ::google::protobuf::Empty* response);
    // Get or list all available experiments for this identity.
    virtual ::grpc::Status GetExperiments(::grpc::ServerContext* context, const ::satori::api::GetExperimentsRequest* request, ::satori::api::ExperimentList* response);
    // List all available flags for this identity.
    virtual ::grpc::Status GetFlags(::grpc::ServerContext* context, const ::satori::api::GetFlagsRequest* request, ::satori::api::FlagList* response);
    // List available live events.
    virtual ::grpc::Status GetLiveEvents(::grpc::ServerContext* context, const ::satori::api::GetLiveEventsRequest* request, ::satori::api::LiveEventList* response);
    // A healthcheck which load balancers can use to check the service.
    virtual ::grpc::Status Healthcheck(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // Enrich/replace the current session with new identifier.
    virtual ::grpc::Status Identify(::grpc::ServerContext* context, const ::satori::api::IdentifyRequest* request, ::satori::api::Session* response);
    // List properties associated with this identity.
    virtual ::grpc::Status ListProperties(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::satori::api::Properties* response);
    // A readycheck which load balancers can use to check the service.
    virtual ::grpc::Status Readycheck(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    // Update identity properties.
    virtual ::grpc::Status UpdateProperties(::grpc::ServerContext* context, const ::satori::api::UpdatePropertiesRequest* request, ::google::protobuf::Empty* response);
    // Get the list of messages for the identity.
    virtual ::grpc::Status GetMessageList(::grpc::ServerContext* context, const ::satori::api::GetMessageListRequest* request, ::satori::api::GetMessageListResponse* response);
    // Updates a message for an identity.
    virtual ::grpc::Status UpdateMessage(::grpc::ServerContext* context, const ::satori::api::UpdateMessageRequest* request, ::google::protobuf::Empty* response);
    // Deletes a message for an identity.
    virtual ::grpc::Status DeleteMessage(::grpc::ServerContext* context, const ::satori::api::DeleteMessageRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Authenticate() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticate(::grpc::ServerContext* context, ::satori::api::AuthenticateRequest* request, ::grpc::ServerAsyncResponseWriter< ::satori::api::Session>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AuthenticateLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AuthenticateLogout() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_AuthenticateLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateLogout(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateLogoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticateLogout(::grpc::ServerContext* context, ::satori::api::AuthenticateLogoutRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AuthenticateRefresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AuthenticateRefresh() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_AuthenticateRefresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateRefresh(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRefreshRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticateRefresh(::grpc::ServerContext* context, ::satori::api::AuthenticateRefreshRequest* request, ::grpc::ServerAsyncResponseWriter< ::satori::api::Session>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteIdentity() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIdentity(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteIdentity(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Event : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Event() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_Event() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Event(::grpc::ServerContext* /*context*/, const ::satori::api::EventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEvent(::grpc::ServerContext* context, ::satori::api::EventRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetExperiments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetExperiments() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetExperiments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExperiments(::grpc::ServerContext* /*context*/, const ::satori::api::GetExperimentsRequest* /*request*/, ::satori::api::ExperimentList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetExperiments(::grpc::ServerContext* context, ::satori::api::GetExperimentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::satori::api::ExperimentList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFlags() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFlags(::grpc::ServerContext* /*context*/, const ::satori::api::GetFlagsRequest* /*request*/, ::satori::api::FlagList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFlags(::grpc::ServerContext* context, ::satori::api::GetFlagsRequest* request, ::grpc::ServerAsyncResponseWriter< ::satori::api::FlagList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLiveEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLiveEvents() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetLiveEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveEvents(::grpc::ServerContext* /*context*/, const ::satori::api::GetLiveEventsRequest* /*request*/, ::satori::api::LiveEventList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLiveEvents(::grpc::ServerContext* context, ::satori::api::GetLiveEventsRequest* request, ::grpc::ServerAsyncResponseWriter< ::satori::api::LiveEventList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Healthcheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Healthcheck() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_Healthcheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Healthcheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealthcheck(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Identify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Identify() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_Identify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Identify(::grpc::ServerContext* /*context*/, const ::satori::api::IdentifyRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIdentify(::grpc::ServerContext* context, ::satori::api::IdentifyRequest* request, ::grpc::ServerAsyncResponseWriter< ::satori::api::Session>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListProperties() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::satori::api::Properties* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProperties(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::satori::api::Properties>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Readycheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Readycheck() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_Readycheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Readycheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadycheck(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateProperties() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_UpdateProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperties(::grpc::ServerContext* /*context*/, const ::satori::api::UpdatePropertiesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProperties(::grpc::ServerContext* context, ::satori::api::UpdatePropertiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMessageList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMessageList() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetMessageList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessageList(::grpc::ServerContext* /*context*/, const ::satori::api::GetMessageListRequest* /*request*/, ::satori::api::GetMessageListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMessageList(::grpc::ServerContext* context, ::satori::api::GetMessageListRequest* request, ::grpc::ServerAsyncResponseWriter< ::satori::api::GetMessageListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateMessage() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_UpdateMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessage(::grpc::ServerContext* /*context*/, const ::satori::api::UpdateMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateMessage(::grpc::ServerContext* context, ::satori::api::UpdateMessageRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::satori::api::DeleteMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMessage(::grpc::ServerContext* context, ::satori::api::DeleteMessageRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Authenticate<WithAsyncMethod_AuthenticateLogout<WithAsyncMethod_AuthenticateRefresh<WithAsyncMethod_DeleteIdentity<WithAsyncMethod_Event<WithAsyncMethod_GetExperiments<WithAsyncMethod_GetFlags<WithAsyncMethod_GetLiveEvents<WithAsyncMethod_Healthcheck<WithAsyncMethod_Identify<WithAsyncMethod_ListProperties<WithAsyncMethod_Readycheck<WithAsyncMethod_UpdateProperties<WithAsyncMethod_GetMessageList<WithAsyncMethod_UpdateMessage<WithAsyncMethod_DeleteMessage<Service > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Authenticate() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::AuthenticateRequest, ::satori::api::Session>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::AuthenticateRequest* request, ::satori::api::Session* response) { return this->Authenticate(context, request, response); }));}
    void SetMessageAllocatorFor_Authenticate(
        ::grpc::MessageAllocator< ::satori::api::AuthenticateRequest, ::satori::api::Session>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::AuthenticateRequest, ::satori::api::Session>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Authenticate(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::AuthenticateRequest* /*request*/, ::satori::api::Session* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AuthenticateLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AuthenticateLogout() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::AuthenticateLogoutRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::AuthenticateLogoutRequest* request, ::google::protobuf::Empty* response) { return this->AuthenticateLogout(context, request, response); }));}
    void SetMessageAllocatorFor_AuthenticateLogout(
        ::grpc::MessageAllocator< ::satori::api::AuthenticateLogoutRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::AuthenticateLogoutRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AuthenticateLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateLogout(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateLogoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AuthenticateLogout(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::AuthenticateLogoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AuthenticateRefresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AuthenticateRefresh() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::AuthenticateRefreshRequest, ::satori::api::Session>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::AuthenticateRefreshRequest* request, ::satori::api::Session* response) { return this->AuthenticateRefresh(context, request, response); }));}
    void SetMessageAllocatorFor_AuthenticateRefresh(
        ::grpc::MessageAllocator< ::satori::api::AuthenticateRefreshRequest, ::satori::api::Session>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::AuthenticateRefreshRequest, ::satori::api::Session>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AuthenticateRefresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateRefresh(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRefreshRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AuthenticateRefresh(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::AuthenticateRefreshRequest* /*request*/, ::satori::api::Session* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteIdentity() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->DeleteIdentity(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteIdentity(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIdentity(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteIdentity(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Event : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Event() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::EventRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::EventRequest* request, ::google::protobuf::Empty* response) { return this->Event(context, request, response); }));}
    void SetMessageAllocatorFor_Event(
        ::grpc::MessageAllocator< ::satori::api::EventRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::EventRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Event() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Event(::grpc::ServerContext* /*context*/, const ::satori::api::EventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Event(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::EventRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetExperiments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetExperiments() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::GetExperimentsRequest, ::satori::api::ExperimentList>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::GetExperimentsRequest* request, ::satori::api::ExperimentList* response) { return this->GetExperiments(context, request, response); }));}
    void SetMessageAllocatorFor_GetExperiments(
        ::grpc::MessageAllocator< ::satori::api::GetExperimentsRequest, ::satori::api::ExperimentList>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::GetExperimentsRequest, ::satori::api::ExperimentList>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetExperiments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExperiments(::grpc::ServerContext* /*context*/, const ::satori::api::GetExperimentsRequest* /*request*/, ::satori::api::ExperimentList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetExperiments(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::GetExperimentsRequest* /*request*/, ::satori::api::ExperimentList* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFlags() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::GetFlagsRequest, ::satori::api::FlagList>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::GetFlagsRequest* request, ::satori::api::FlagList* response) { return this->GetFlags(context, request, response); }));}
    void SetMessageAllocatorFor_GetFlags(
        ::grpc::MessageAllocator< ::satori::api::GetFlagsRequest, ::satori::api::FlagList>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::GetFlagsRequest, ::satori::api::FlagList>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFlags(::grpc::ServerContext* /*context*/, const ::satori::api::GetFlagsRequest* /*request*/, ::satori::api::FlagList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFlags(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::GetFlagsRequest* /*request*/, ::satori::api::FlagList* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetLiveEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetLiveEvents() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::GetLiveEventsRequest, ::satori::api::LiveEventList>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::GetLiveEventsRequest* request, ::satori::api::LiveEventList* response) { return this->GetLiveEvents(context, request, response); }));}
    void SetMessageAllocatorFor_GetLiveEvents(
        ::grpc::MessageAllocator< ::satori::api::GetLiveEventsRequest, ::satori::api::LiveEventList>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::GetLiveEventsRequest, ::satori::api::LiveEventList>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetLiveEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveEvents(::grpc::ServerContext* /*context*/, const ::satori::api::GetLiveEventsRequest* /*request*/, ::satori::api::LiveEventList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLiveEvents(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::GetLiveEventsRequest* /*request*/, ::satori::api::LiveEventList* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Healthcheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Healthcheck() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->Healthcheck(context, request, response); }));}
    void SetMessageAllocatorFor_Healthcheck(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Healthcheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Healthcheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Healthcheck(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Identify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Identify() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::IdentifyRequest, ::satori::api::Session>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::IdentifyRequest* request, ::satori::api::Session* response) { return this->Identify(context, request, response); }));}
    void SetMessageAllocatorFor_Identify(
        ::grpc::MessageAllocator< ::satori::api::IdentifyRequest, ::satori::api::Session>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::IdentifyRequest, ::satori::api::Session>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Identify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Identify(::grpc::ServerContext* /*context*/, const ::satori::api::IdentifyRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Identify(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::IdentifyRequest* /*request*/, ::satori::api::Session* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListProperties() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::satori::api::Properties>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::satori::api::Properties* response) { return this->ListProperties(context, request, response); }));}
    void SetMessageAllocatorFor_ListProperties(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::satori::api::Properties>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::satori::api::Properties>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::satori::api::Properties* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::satori::api::Properties* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Readycheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Readycheck() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->Readycheck(context, request, response); }));}
    void SetMessageAllocatorFor_Readycheck(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Readycheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Readycheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Readycheck(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateProperties() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::UpdatePropertiesRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::UpdatePropertiesRequest* request, ::google::protobuf::Empty* response) { return this->UpdateProperties(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateProperties(
        ::grpc::MessageAllocator< ::satori::api::UpdatePropertiesRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::UpdatePropertiesRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperties(::grpc::ServerContext* /*context*/, const ::satori::api::UpdatePropertiesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::UpdatePropertiesRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMessageList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMessageList() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::GetMessageListRequest, ::satori::api::GetMessageListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::GetMessageListRequest* request, ::satori::api::GetMessageListResponse* response) { return this->GetMessageList(context, request, response); }));}
    void SetMessageAllocatorFor_GetMessageList(
        ::grpc::MessageAllocator< ::satori::api::GetMessageListRequest, ::satori::api::GetMessageListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::GetMessageListRequest, ::satori::api::GetMessageListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMessageList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessageList(::grpc::ServerContext* /*context*/, const ::satori::api::GetMessageListRequest* /*request*/, ::satori::api::GetMessageListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMessageList(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::GetMessageListRequest* /*request*/, ::satori::api::GetMessageListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateMessage() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::UpdateMessageRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::UpdateMessageRequest* request, ::google::protobuf::Empty* response) { return this->UpdateMessage(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateMessage(
        ::grpc::MessageAllocator< ::satori::api::UpdateMessageRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::UpdateMessageRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessage(::grpc::ServerContext* /*context*/, const ::satori::api::UpdateMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::UpdateMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::satori::api::DeleteMessageRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::satori::api::DeleteMessageRequest* request, ::google::protobuf::Empty* response) { return this->DeleteMessage(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteMessage(
        ::grpc::MessageAllocator< ::satori::api::DeleteMessageRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::satori::api::DeleteMessageRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::satori::api::DeleteMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::satori::api::DeleteMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Authenticate<WithCallbackMethod_AuthenticateLogout<WithCallbackMethod_AuthenticateRefresh<WithCallbackMethod_DeleteIdentity<WithCallbackMethod_Event<WithCallbackMethod_GetExperiments<WithCallbackMethod_GetFlags<WithCallbackMethod_GetLiveEvents<WithCallbackMethod_Healthcheck<WithCallbackMethod_Identify<WithCallbackMethod_ListProperties<WithCallbackMethod_Readycheck<WithCallbackMethod_UpdateProperties<WithCallbackMethod_GetMessageList<WithCallbackMethod_UpdateMessage<WithCallbackMethod_DeleteMessage<Service > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Authenticate() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AuthenticateLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AuthenticateLogout() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_AuthenticateLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateLogout(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateLogoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AuthenticateRefresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AuthenticateRefresh() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_AuthenticateRefresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateRefresh(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRefreshRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteIdentity() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIdentity(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Event : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Event() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_Event() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Event(::grpc::ServerContext* /*context*/, const ::satori::api::EventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetExperiments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetExperiments() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetExperiments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExperiments(::grpc::ServerContext* /*context*/, const ::satori::api::GetExperimentsRequest* /*request*/, ::satori::api::ExperimentList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFlags() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFlags(::grpc::ServerContext* /*context*/, const ::satori::api::GetFlagsRequest* /*request*/, ::satori::api::FlagList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLiveEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLiveEvents() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetLiveEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveEvents(::grpc::ServerContext* /*context*/, const ::satori::api::GetLiveEventsRequest* /*request*/, ::satori::api::LiveEventList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Healthcheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Healthcheck() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_Healthcheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Healthcheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Identify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Identify() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_Identify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Identify(::grpc::ServerContext* /*context*/, const ::satori::api::IdentifyRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListProperties() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::satori::api::Properties* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Readycheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Readycheck() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_Readycheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Readycheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateProperties() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_UpdateProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperties(::grpc::ServerContext* /*context*/, const ::satori::api::UpdatePropertiesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMessageList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMessageList() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetMessageList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessageList(::grpc::ServerContext* /*context*/, const ::satori::api::GetMessageListRequest* /*request*/, ::satori::api::GetMessageListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateMessage() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_UpdateMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessage(::grpc::ServerContext* /*context*/, const ::satori::api::UpdateMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::satori::api::DeleteMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Authenticate() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AuthenticateLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AuthenticateLogout() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_AuthenticateLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateLogout(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateLogoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticateLogout(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AuthenticateRefresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AuthenticateRefresh() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_AuthenticateRefresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateRefresh(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRefreshRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticateRefresh(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteIdentity() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIdentity(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteIdentity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Event : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Event() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_Event() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Event(::grpc::ServerContext* /*context*/, const ::satori::api::EventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEvent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetExperiments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetExperiments() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetExperiments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExperiments(::grpc::ServerContext* /*context*/, const ::satori::api::GetExperimentsRequest* /*request*/, ::satori::api::ExperimentList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetExperiments(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFlags() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFlags(::grpc::ServerContext* /*context*/, const ::satori::api::GetFlagsRequest* /*request*/, ::satori::api::FlagList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFlags(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLiveEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLiveEvents() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetLiveEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveEvents(::grpc::ServerContext* /*context*/, const ::satori::api::GetLiveEventsRequest* /*request*/, ::satori::api::LiveEventList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLiveEvents(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Healthcheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Healthcheck() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_Healthcheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Healthcheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealthcheck(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Identify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Identify() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_Identify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Identify(::grpc::ServerContext* /*context*/, const ::satori::api::IdentifyRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIdentify(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListProperties() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::satori::api::Properties* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListProperties(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Readycheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Readycheck() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_Readycheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Readycheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadycheck(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateProperties() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_UpdateProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperties(::grpc::ServerContext* /*context*/, const ::satori::api::UpdatePropertiesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProperties(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMessageList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMessageList() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetMessageList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessageList(::grpc::ServerContext* /*context*/, const ::satori::api::GetMessageListRequest* /*request*/, ::satori::api::GetMessageListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMessageList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateMessage() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_UpdateMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessage(::grpc::ServerContext* /*context*/, const ::satori::api::UpdateMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateMessage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::satori::api::DeleteMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteMessage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Authenticate() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Authenticate(context, request, response); }));
    }
    ~WithRawCallbackMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Authenticate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AuthenticateLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AuthenticateLogout() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AuthenticateLogout(context, request, response); }));
    }
    ~WithRawCallbackMethod_AuthenticateLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateLogout(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateLogoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AuthenticateLogout(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AuthenticateRefresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AuthenticateRefresh() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AuthenticateRefresh(context, request, response); }));
    }
    ~WithRawCallbackMethod_AuthenticateRefresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateRefresh(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRefreshRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AuthenticateRefresh(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteIdentity() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteIdentity(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteIdentity(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteIdentity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Event : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Event() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Event(context, request, response); }));
    }
    ~WithRawCallbackMethod_Event() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Event(::grpc::ServerContext* /*context*/, const ::satori::api::EventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Event(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetExperiments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetExperiments() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetExperiments(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetExperiments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetExperiments(::grpc::ServerContext* /*context*/, const ::satori::api::GetExperimentsRequest* /*request*/, ::satori::api::ExperimentList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetExperiments(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFlags() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFlags(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFlags(::grpc::ServerContext* /*context*/, const ::satori::api::GetFlagsRequest* /*request*/, ::satori::api::FlagList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFlags(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetLiveEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetLiveEvents() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLiveEvents(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetLiveEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveEvents(::grpc::ServerContext* /*context*/, const ::satori::api::GetLiveEventsRequest* /*request*/, ::satori::api::LiveEventList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLiveEvents(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Healthcheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Healthcheck() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Healthcheck(context, request, response); }));
    }
    ~WithRawCallbackMethod_Healthcheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Healthcheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Healthcheck(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Identify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Identify() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Identify(context, request, response); }));
    }
    ~WithRawCallbackMethod_Identify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Identify(::grpc::ServerContext* /*context*/, const ::satori::api::IdentifyRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Identify(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListProperties() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListProperties(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::satori::api::Properties* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Readycheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Readycheck() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Readycheck(context, request, response); }));
    }
    ~WithRawCallbackMethod_Readycheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Readycheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Readycheck(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateProperties() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateProperties(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProperties(::grpc::ServerContext* /*context*/, const ::satori::api::UpdatePropertiesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMessageList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMessageList() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMessageList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMessageList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessageList(::grpc::ServerContext* /*context*/, const ::satori::api::GetMessageListRequest* /*request*/, ::satori::api::GetMessageListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMessageList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateMessage() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateMessage(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessage(::grpc::ServerContext* /*context*/, const ::satori::api::UpdateMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteMessage(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::satori::api::DeleteMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Authenticate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Authenticate() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::AuthenticateRequest, ::satori::api::Session>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::AuthenticateRequest, ::satori::api::Session>* streamer) {
                       return this->StreamedAuthenticate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Authenticate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Authenticate(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAuthenticate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::AuthenticateRequest,::satori::api::Session>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AuthenticateLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AuthenticateLogout() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::AuthenticateLogoutRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::AuthenticateLogoutRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedAuthenticateLogout(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AuthenticateLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AuthenticateLogout(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateLogoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAuthenticateLogout(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::AuthenticateLogoutRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AuthenticateRefresh : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AuthenticateRefresh() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::AuthenticateRefreshRequest, ::satori::api::Session>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::AuthenticateRefreshRequest, ::satori::api::Session>* streamer) {
                       return this->StreamedAuthenticateRefresh(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AuthenticateRefresh() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AuthenticateRefresh(::grpc::ServerContext* /*context*/, const ::satori::api::AuthenticateRefreshRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAuthenticateRefresh(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::AuthenticateRefreshRequest,::satori::api::Session>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteIdentity() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteIdentity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteIdentity(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteIdentity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Event : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Event() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::EventRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::EventRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedEvent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Event() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Event(::grpc::ServerContext* /*context*/, const ::satori::api::EventRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEvent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::EventRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetExperiments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetExperiments() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::GetExperimentsRequest, ::satori::api::ExperimentList>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::GetExperimentsRequest, ::satori::api::ExperimentList>* streamer) {
                       return this->StreamedGetExperiments(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetExperiments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetExperiments(::grpc::ServerContext* /*context*/, const ::satori::api::GetExperimentsRequest* /*request*/, ::satori::api::ExperimentList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetExperiments(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::GetExperimentsRequest,::satori::api::ExperimentList>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFlags() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::GetFlagsRequest, ::satori::api::FlagList>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::GetFlagsRequest, ::satori::api::FlagList>* streamer) {
                       return this->StreamedGetFlags(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFlags(::grpc::ServerContext* /*context*/, const ::satori::api::GetFlagsRequest* /*request*/, ::satori::api::FlagList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFlags(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::GetFlagsRequest,::satori::api::FlagList>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLiveEvents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLiveEvents() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::GetLiveEventsRequest, ::satori::api::LiveEventList>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::GetLiveEventsRequest, ::satori::api::LiveEventList>* streamer) {
                       return this->StreamedGetLiveEvents(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLiveEvents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLiveEvents(::grpc::ServerContext* /*context*/, const ::satori::api::GetLiveEventsRequest* /*request*/, ::satori::api::LiveEventList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLiveEvents(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::GetLiveEventsRequest,::satori::api::LiveEventList>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Healthcheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Healthcheck() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedHealthcheck(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Healthcheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Healthcheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHealthcheck(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Identify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Identify() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::IdentifyRequest, ::satori::api::Session>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::IdentifyRequest, ::satori::api::Session>* streamer) {
                       return this->StreamedIdentify(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Identify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Identify(::grpc::ServerContext* /*context*/, const ::satori::api::IdentifyRequest* /*request*/, ::satori::api::Session* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIdentify(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::IdentifyRequest,::satori::api::Session>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListProperties() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::satori::api::Properties>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::satori::api::Properties>* streamer) {
                       return this->StreamedListProperties(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListProperties(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::satori::api::Properties* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListProperties(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::satori::api::Properties>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Readycheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Readycheck() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedReadycheck(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Readycheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Readycheck(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReadycheck(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateProperties() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::UpdatePropertiesRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::UpdatePropertiesRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUpdateProperties(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateProperties(::grpc::ServerContext* /*context*/, const ::satori::api::UpdatePropertiesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateProperties(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::UpdatePropertiesRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMessageList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMessageList() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::GetMessageListRequest, ::satori::api::GetMessageListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::GetMessageListRequest, ::satori::api::GetMessageListResponse>* streamer) {
                       return this->StreamedGetMessageList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMessageList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMessageList(::grpc::ServerContext* /*context*/, const ::satori::api::GetMessageListRequest* /*request*/, ::satori::api::GetMessageListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMessageList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::GetMessageListRequest,::satori::api::GetMessageListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateMessage() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::UpdateMessageRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::UpdateMessageRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUpdateMessage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateMessage(::grpc::ServerContext* /*context*/, const ::satori::api::UpdateMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateMessage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::UpdateMessageRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteMessage() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::satori::api::DeleteMessageRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::satori::api::DeleteMessageRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteMessage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteMessage(::grpc::ServerContext* /*context*/, const ::satori::api::DeleteMessageRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteMessage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::satori::api::DeleteMessageRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Authenticate<WithStreamedUnaryMethod_AuthenticateLogout<WithStreamedUnaryMethod_AuthenticateRefresh<WithStreamedUnaryMethod_DeleteIdentity<WithStreamedUnaryMethod_Event<WithStreamedUnaryMethod_GetExperiments<WithStreamedUnaryMethod_GetFlags<WithStreamedUnaryMethod_GetLiveEvents<WithStreamedUnaryMethod_Healthcheck<WithStreamedUnaryMethod_Identify<WithStreamedUnaryMethod_ListProperties<WithStreamedUnaryMethod_Readycheck<WithStreamedUnaryMethod_UpdateProperties<WithStreamedUnaryMethod_GetMessageList<WithStreamedUnaryMethod_UpdateMessage<WithStreamedUnaryMethod_DeleteMessage<Service > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Authenticate<WithStreamedUnaryMethod_AuthenticateLogout<WithStreamedUnaryMethod_AuthenticateRefresh<WithStreamedUnaryMethod_DeleteIdentity<WithStreamedUnaryMethod_Event<WithStreamedUnaryMethod_GetExperiments<WithStreamedUnaryMethod_GetFlags<WithStreamedUnaryMethod_GetLiveEvents<WithStreamedUnaryMethod_Healthcheck<WithStreamedUnaryMethod_Identify<WithStreamedUnaryMethod_ListProperties<WithStreamedUnaryMethod_Readycheck<WithStreamedUnaryMethod_UpdateProperties<WithStreamedUnaryMethod_GetMessageList<WithStreamedUnaryMethod_UpdateMessage<WithStreamedUnaryMethod_DeleteMessage<Service > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace api
}  // namespace satori


#endif  // GRPC_satori_2eproto__INCLUDED
